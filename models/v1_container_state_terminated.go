// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// V1ContainerStateTerminated v1 container state terminated
//
// swagger:model v1.ContainerStateTerminated
type V1ContainerStateTerminated struct {

	// Container's ID in the format '<type>://<container_id>'
	// +optional
	ContainerID string `json:"containerID,omitempty"`

	// Exit status from the last termination of the container
	ExitCode int64 `json:"exitCode,omitempty"`

	// Time at which the container last terminated
	// +optional
	FinishedAt string `json:"finishedAt,omitempty"`

	// Message regarding the last termination of the container
	// +optional
	Message string `json:"message,omitempty"`

	// (brief) reason from the last termination of the container
	// +optional
	Reason string `json:"reason,omitempty"`

	// Signal from the last termination of the container
	// +optional
	Signal int64 `json:"signal,omitempty"`

	// Time at which previous execution of the container started
	// +optional
	StartedAt string `json:"startedAt,omitempty"`
}

// Validate validates this v1 container state terminated
func (m *V1ContainerStateTerminated) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this v1 container state terminated based on context it is used
func (m *V1ContainerStateTerminated) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *V1ContainerStateTerminated) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *V1ContainerStateTerminated) UnmarshalBinary(b []byte) error {
	var res V1ContainerStateTerminated
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
