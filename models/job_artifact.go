// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// JobArtifact job artifact
//
// swagger:model JobArtifact
type JobArtifact struct {

	// last modified
	LastModified string `json:"lastModified,omitempty"`

	// path
	Path string `json:"path,omitempty"`

	// size
	Size int64 `json:"size,omitempty"`

	// space
	Space ArtifactsJobArtifactSpace `json:"space,omitempty"`
}

// Validate validates this job artifact
func (m *JobArtifact) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateSpace(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *JobArtifact) validateSpace(formats strfmt.Registry) error {
	if swag.IsZero(m.Space) { // not required
		return nil
	}

	if err := m.Space.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("space")
		} else if ce, ok := err.(*errors.CompositeError); ok {
			return ce.ValidateName("space")
		}
		return err
	}

	return nil
}

// ContextValidate validate this job artifact based on the context it is used
func (m *JobArtifact) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateSpace(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *JobArtifact) contextValidateSpace(ctx context.Context, formats strfmt.Registry) error {

	if swag.IsZero(m.Space) { // not required
		return nil
	}

	if err := m.Space.ContextValidate(ctx, formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("space")
		} else if ce, ok := err.(*errors.CompositeError); ok {
			return ce.ValidateName("space")
		}
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *JobArtifact) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *JobArtifact) UnmarshalBinary(b []byte) error {
	var res JobArtifact
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
