// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// V1ImageReplacement v1 image replacement
//
// swagger:model v1.ImageReplacement
type V1ImageReplacement struct {

	// Name specifies which image name in live workloads will be replaced.
	//
	// Example: us.gcr.io/my-staging-registry/widget
	Name string `json:"name,omitempty"`

	// Namespace optionally specifies which namespace will be searched.
	Namespace string `json:"namespace,omitempty"`

	// NewName provides a replacement for the image name (the part before the tag).
	// If this is left unset, the image name will not be changed.
	//
	// Example: us.gcr.io/my-dev-registry/username/widget
	NewName string `json:"newName,omitempty"`

	// NewTag provides a replacement tag for the image.
	// If this is left unset, the image tag will not be changed.
	//
	// Example: v1.0.0-snapshot-abc123
	NewTag string `json:"newTag,omitempty"`
}

// Validate validates this v1 image replacement
func (m *V1ImageReplacement) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this v1 image replacement based on context it is used
func (m *V1ImageReplacement) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *V1ImageReplacement) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *V1ImageReplacement) UnmarshalBinary(b []byte) error {
	var res V1ImageReplacement
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
