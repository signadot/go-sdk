// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// JobTrafficManager job traffic manager
//
// swagger:model job.TrafficManager
type JobTrafficManager struct {

	// InjectRoutingKey indicates if the system should perform automatic
	// injection of routing key headers or not.  It may be the empty string,
	// "auto" or "disabled".  The empty string defaults to meaning "disabled".
	// Enum: ["disabled","auto"]
	InjectRoutingKey string `json:"injectRoutingKey,omitempty"`
}

// Validate validates this job traffic manager
func (m *JobTrafficManager) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateInjectRoutingKey(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var jobTrafficManagerTypeInjectRoutingKeyPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["disabled","auto"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		jobTrafficManagerTypeInjectRoutingKeyPropEnum = append(jobTrafficManagerTypeInjectRoutingKeyPropEnum, v)
	}
}

const (

	// JobTrafficManagerInjectRoutingKeyDisabled captures enum value "disabled"
	JobTrafficManagerInjectRoutingKeyDisabled string = "disabled"

	// JobTrafficManagerInjectRoutingKeyAuto captures enum value "auto"
	JobTrafficManagerInjectRoutingKeyAuto string = "auto"
)

// prop value enum
func (m *JobTrafficManager) validateInjectRoutingKeyEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, jobTrafficManagerTypeInjectRoutingKeyPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *JobTrafficManager) validateInjectRoutingKey(formats strfmt.Registry) error {
	if swag.IsZero(m.InjectRoutingKey) { // not required
		return nil
	}

	// value enum
	if err := m.validateInjectRoutingKeyEnum("injectRoutingKey", "body", m.InjectRoutingKey); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this job traffic manager based on context it is used
func (m *JobTrafficManager) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *JobTrafficManager) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *JobTrafficManager) UnmarshalBinary(b []byte) error {
	var res JobTrafficManager
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
