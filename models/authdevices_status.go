// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// AuthdevicesStatus authdevices status
//
// swagger:model authdevices.Status
type AuthdevicesStatus string

func NewAuthdevicesStatus(value AuthdevicesStatus) *AuthdevicesStatus {
	return &value
}

// Pointer returns a pointer to a freshly-allocated AuthdevicesStatus.
func (m AuthdevicesStatus) Pointer() *AuthdevicesStatus {
	return &m
}

const (

	// AuthdevicesStatusPending captures enum value "pending"
	AuthdevicesStatusPending AuthdevicesStatus = "pending"

	// AuthdevicesStatusSlowDown captures enum value "slow_down"
	AuthdevicesStatusSlowDown AuthdevicesStatus = "slow_down"

	// AuthdevicesStatusCompleted captures enum value "completed"
	AuthdevicesStatusCompleted AuthdevicesStatus = "completed"
)

// for schema
var authdevicesStatusEnum []interface{}

func init() {
	var res []AuthdevicesStatus
	if err := json.Unmarshal([]byte(`["pending","slow_down","completed"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		authdevicesStatusEnum = append(authdevicesStatusEnum, v)
	}
}

func (m AuthdevicesStatus) validateAuthdevicesStatusEnum(path, location string, value AuthdevicesStatus) error {
	if err := validate.EnumCase(path, location, value, authdevicesStatusEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this authdevices status
func (m AuthdevicesStatus) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateAuthdevicesStatusEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this authdevices status based on context it is used
func (m AuthdevicesStatus) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
