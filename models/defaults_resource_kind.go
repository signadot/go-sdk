// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// DefaultsResourceKind defaults resource kind
//
// swagger:model defaults.ResourceKind
type DefaultsResourceKind string

func NewDefaultsResourceKind(value DefaultsResourceKind) *DefaultsResourceKind {
	return &value
}

// Pointer returns a pointer to a freshly-allocated DefaultsResourceKind.
func (m DefaultsResourceKind) Pointer() *DefaultsResourceKind {
	return &m
}

const (

	// DefaultsResourceKindSandbox captures enum value "sandbox"
	DefaultsResourceKindSandbox DefaultsResourceKind = "sandbox"

	// DefaultsResourceKindRoutegroup captures enum value "routegroup"
	DefaultsResourceKindRoutegroup DefaultsResourceKind = "routegroup"
)

// for schema
var defaultsResourceKindEnum []interface{}

func init() {
	var res []DefaultsResourceKind
	if err := json.Unmarshal([]byte(`["sandbox","routegroup"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		defaultsResourceKindEnum = append(defaultsResourceKindEnum, v)
	}
}

func (m DefaultsResourceKind) validateDefaultsResourceKindEnum(path, location string, value DefaultsResourceKind) error {
	if err := validate.EnumCase(path, location, value, defaultsResourceKindEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this defaults resource kind
func (m DefaultsResourceKind) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateDefaultsResourceKindEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this defaults resource kind based on context it is used
func (m DefaultsResourceKind) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
