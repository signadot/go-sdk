// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// V1WindowsSecurityContextOptions v1 windows security context options
//
// swagger:model v1.WindowsSecurityContextOptions
type V1WindowsSecurityContextOptions struct {

	// GMSACredentialSpec is where the GMSA admission webhook
	// (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the
	// GMSA credential spec named by the GMSACredentialSpecName field.
	// +optional
	GmsaCredentialSpec string `json:"gmsaCredentialSpec,omitempty"`

	// GMSACredentialSpecName is the name of the GMSA credential spec to use.
	// +optional
	GmsaCredentialSpecName string `json:"gmsaCredentialSpecName,omitempty"`

	// HostProcess determines if a container should be run as a 'Host Process' container.
	// This field is alpha-level and will only be honored by components that enable the
	// WindowsHostProcessContainers feature flag. Setting this field without the feature
	// flag will result in errors when validating the Pod. All of a Pod's containers must
	// have the same effective HostProcess value (it is not allowed to have a mix of HostProcess
	// containers and non-HostProcess containers).  In addition, if HostProcess is true
	// then HostNetwork must also be set to true.
	// +optional
	HostProcess bool `json:"hostProcess,omitempty"`

	// The UserName in Windows to run the entrypoint of the container process.
	// Defaults to the user specified in image metadata if unspecified.
	// May also be set in PodSecurityContext. If set in both SecurityContext and
	// PodSecurityContext, the value specified in SecurityContext takes precedence.
	// +optional
	RunAsUserName string `json:"runAsUserName,omitempty"`
}

// Validate validates this v1 windows security context options
func (m *V1WindowsSecurityContextOptions) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this v1 windows security context options based on context it is used
func (m *V1WindowsSecurityContextOptions) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *V1WindowsSecurityContextOptions) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *V1WindowsSecurityContextOptions) UnmarshalBinary(b []byte) error {
	var res V1WindowsSecurityContextOptions
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
