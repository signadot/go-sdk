/*
Signadot API

API for Signadot Sandboxes

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// UpsertWorkspaceResponse struct for UpsertWorkspaceResponse
type UpsertWorkspaceResponse struct {
	PreviewEndpoints []PreviewEndpoint `json:"previewEndpoints,omitempty"`
	PreviewURLs []string `json:"previewURLs,omitempty"`
	Warnings []string `json:"warnings,omitempty"`
	WorkspaceIDs []string `json:"workspaceIDs,omitempty"`
}

// NewUpsertWorkspaceResponse instantiates a new UpsertWorkspaceResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpsertWorkspaceResponse() *UpsertWorkspaceResponse {
	this := UpsertWorkspaceResponse{}
	return &this
}

// NewUpsertWorkspaceResponseWithDefaults instantiates a new UpsertWorkspaceResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpsertWorkspaceResponseWithDefaults() *UpsertWorkspaceResponse {
	this := UpsertWorkspaceResponse{}
	return &this
}

// GetPreviewEndpoints returns the PreviewEndpoints field value if set, zero value otherwise.
func (o *UpsertWorkspaceResponse) GetPreviewEndpoints() []PreviewEndpoint {
	if o == nil || o.PreviewEndpoints == nil {
		var ret []PreviewEndpoint
		return ret
	}
	return o.PreviewEndpoints
}

// GetPreviewEndpointsOk returns a tuple with the PreviewEndpoints field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpsertWorkspaceResponse) GetPreviewEndpointsOk() ([]PreviewEndpoint, bool) {
	if o == nil || o.PreviewEndpoints == nil {
		return nil, false
	}
	return o.PreviewEndpoints, true
}

// HasPreviewEndpoints returns a boolean if a field has been set.
func (o *UpsertWorkspaceResponse) HasPreviewEndpoints() bool {
	if o != nil && o.PreviewEndpoints != nil {
		return true
	}

	return false
}

// SetPreviewEndpoints gets a reference to the given []PreviewEndpoint and assigns it to the PreviewEndpoints field.
func (o *UpsertWorkspaceResponse) SetPreviewEndpoints(v []PreviewEndpoint) {
	o.PreviewEndpoints = v
}

// GetPreviewURLs returns the PreviewURLs field value if set, zero value otherwise.
func (o *UpsertWorkspaceResponse) GetPreviewURLs() []string {
	if o == nil || o.PreviewURLs == nil {
		var ret []string
		return ret
	}
	return o.PreviewURLs
}

// GetPreviewURLsOk returns a tuple with the PreviewURLs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpsertWorkspaceResponse) GetPreviewURLsOk() ([]string, bool) {
	if o == nil || o.PreviewURLs == nil {
		return nil, false
	}
	return o.PreviewURLs, true
}

// HasPreviewURLs returns a boolean if a field has been set.
func (o *UpsertWorkspaceResponse) HasPreviewURLs() bool {
	if o != nil && o.PreviewURLs != nil {
		return true
	}

	return false
}

// SetPreviewURLs gets a reference to the given []string and assigns it to the PreviewURLs field.
func (o *UpsertWorkspaceResponse) SetPreviewURLs(v []string) {
	o.PreviewURLs = v
}

// GetWarnings returns the Warnings field value if set, zero value otherwise.
func (o *UpsertWorkspaceResponse) GetWarnings() []string {
	if o == nil || o.Warnings == nil {
		var ret []string
		return ret
	}
	return o.Warnings
}

// GetWarningsOk returns a tuple with the Warnings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpsertWorkspaceResponse) GetWarningsOk() ([]string, bool) {
	if o == nil || o.Warnings == nil {
		return nil, false
	}
	return o.Warnings, true
}

// HasWarnings returns a boolean if a field has been set.
func (o *UpsertWorkspaceResponse) HasWarnings() bool {
	if o != nil && o.Warnings != nil {
		return true
	}

	return false
}

// SetWarnings gets a reference to the given []string and assigns it to the Warnings field.
func (o *UpsertWorkspaceResponse) SetWarnings(v []string) {
	o.Warnings = v
}

// GetWorkspaceIDs returns the WorkspaceIDs field value if set, zero value otherwise.
func (o *UpsertWorkspaceResponse) GetWorkspaceIDs() []string {
	if o == nil || o.WorkspaceIDs == nil {
		var ret []string
		return ret
	}
	return o.WorkspaceIDs
}

// GetWorkspaceIDsOk returns a tuple with the WorkspaceIDs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpsertWorkspaceResponse) GetWorkspaceIDsOk() ([]string, bool) {
	if o == nil || o.WorkspaceIDs == nil {
		return nil, false
	}
	return o.WorkspaceIDs, true
}

// HasWorkspaceIDs returns a boolean if a field has been set.
func (o *UpsertWorkspaceResponse) HasWorkspaceIDs() bool {
	if o != nil && o.WorkspaceIDs != nil {
		return true
	}

	return false
}

// SetWorkspaceIDs gets a reference to the given []string and assigns it to the WorkspaceIDs field.
func (o *UpsertWorkspaceResponse) SetWorkspaceIDs(v []string) {
	o.WorkspaceIDs = v
}

func (o UpsertWorkspaceResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.PreviewEndpoints != nil {
		toSerialize["previewEndpoints"] = o.PreviewEndpoints
	}
	if o.PreviewURLs != nil {
		toSerialize["previewURLs"] = o.PreviewURLs
	}
	if o.Warnings != nil {
		toSerialize["warnings"] = o.Warnings
	}
	if o.WorkspaceIDs != nil {
		toSerialize["workspaceIDs"] = o.WorkspaceIDs
	}
	return json.Marshal(toSerialize)
}

type NullableUpsertWorkspaceResponse struct {
	value *UpsertWorkspaceResponse
	isSet bool
}

func (v NullableUpsertWorkspaceResponse) Get() *UpsertWorkspaceResponse {
	return v.value
}

func (v *NullableUpsertWorkspaceResponse) Set(val *UpsertWorkspaceResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableUpsertWorkspaceResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableUpsertWorkspaceResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpsertWorkspaceResponse(val *UpsertWorkspaceResponse) *NullableUpsertWorkspaceResponse {
	return &NullableUpsertWorkspaceResponse{value: val, isSet: true}
}

func (v NullableUpsertWorkspaceResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpsertWorkspaceResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


