/*
Signadot API

API for Signadot Sandboxes

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// SandboxReadyResponse struct for SandboxReadyResponse
type SandboxReadyResponse struct {
	Ready *bool `json:"ready,omitempty"`
}

// NewSandboxReadyResponse instantiates a new SandboxReadyResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSandboxReadyResponse() *SandboxReadyResponse {
	this := SandboxReadyResponse{}
	return &this
}

// NewSandboxReadyResponseWithDefaults instantiates a new SandboxReadyResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSandboxReadyResponseWithDefaults() *SandboxReadyResponse {
	this := SandboxReadyResponse{}
	return &this
}

// GetReady returns the Ready field value if set, zero value otherwise.
func (o *SandboxReadyResponse) GetReady() bool {
	if o == nil || o.Ready == nil {
		var ret bool
		return ret
	}
	return *o.Ready
}

// GetReadyOk returns a tuple with the Ready field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SandboxReadyResponse) GetReadyOk() (*bool, bool) {
	if o == nil || o.Ready == nil {
		return nil, false
	}
	return o.Ready, true
}

// HasReady returns a boolean if a field has been set.
func (o *SandboxReadyResponse) HasReady() bool {
	if o != nil && o.Ready != nil {
		return true
	}

	return false
}

// SetReady gets a reference to the given bool and assigns it to the Ready field.
func (o *SandboxReadyResponse) SetReady(v bool) {
	o.Ready = &v
}

func (o SandboxReadyResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Ready != nil {
		toSerialize["ready"] = o.Ready
	}
	return json.Marshal(toSerialize)
}

type NullableSandboxReadyResponse struct {
	value *SandboxReadyResponse
	isSet bool
}

func (v NullableSandboxReadyResponse) Get() *SandboxReadyResponse {
	return v.value
}

func (v *NullableSandboxReadyResponse) Set(val *SandboxReadyResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableSandboxReadyResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableSandboxReadyResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSandboxReadyResponse(val *SandboxReadyResponse) *NullableSandboxReadyResponse {
	return &NullableSandboxReadyResponse{value: val, isSet: true}
}

func (v NullableSandboxReadyResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSandboxReadyResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


