/*
Signadot API

API for Signadot Sandboxes

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// CreateSandboxRequest struct for CreateSandboxRequest
type CreateSandboxRequest struct {
	// Cluster within which this sandbox should be created
	Cluster string `json:"cluster"`
	// Description of the purpose of this sandbox
	Description *string `json:"description,omitempty"`
	// Endpoints that can be used to point to external DNS names or ingress gateways
	Endpoints []SandboxEndpoint `json:"endpoints,omitempty"`
	// Forks is the specification of each forked entity
	Forks []SandboxFork `json:"forks"`
	// Human-readable name of this sandbox
	Name *string `json:"name,omitempty"`
	// Resources specifies each required resource to spin up the sandbox
	Resources []SandboxResource `json:"resources,omitempty"`
}

// NewCreateSandboxRequest instantiates a new CreateSandboxRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateSandboxRequest(cluster string, forks []SandboxFork) *CreateSandboxRequest {
	this := CreateSandboxRequest{}
	this.Cluster = cluster
	this.Forks = forks
	return &this
}

// NewCreateSandboxRequestWithDefaults instantiates a new CreateSandboxRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateSandboxRequestWithDefaults() *CreateSandboxRequest {
	this := CreateSandboxRequest{}
	return &this
}

// GetCluster returns the Cluster field value
func (o *CreateSandboxRequest) GetCluster() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Cluster
}

// GetClusterOk returns a tuple with the Cluster field value
// and a boolean to check if the value has been set.
func (o *CreateSandboxRequest) GetClusterOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Cluster, true
}

// SetCluster sets field value
func (o *CreateSandboxRequest) SetCluster(v string) {
	o.Cluster = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *CreateSandboxRequest) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSandboxRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *CreateSandboxRequest) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *CreateSandboxRequest) SetDescription(v string) {
	o.Description = &v
}

// GetEndpoints returns the Endpoints field value if set, zero value otherwise.
func (o *CreateSandboxRequest) GetEndpoints() []SandboxEndpoint {
	if o == nil || o.Endpoints == nil {
		var ret []SandboxEndpoint
		return ret
	}
	return o.Endpoints
}

// GetEndpointsOk returns a tuple with the Endpoints field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSandboxRequest) GetEndpointsOk() ([]SandboxEndpoint, bool) {
	if o == nil || o.Endpoints == nil {
		return nil, false
	}
	return o.Endpoints, true
}

// HasEndpoints returns a boolean if a field has been set.
func (o *CreateSandboxRequest) HasEndpoints() bool {
	if o != nil && o.Endpoints != nil {
		return true
	}

	return false
}

// SetEndpoints gets a reference to the given []SandboxEndpoint and assigns it to the Endpoints field.
func (o *CreateSandboxRequest) SetEndpoints(v []SandboxEndpoint) {
	o.Endpoints = v
}

// GetForks returns the Forks field value
func (o *CreateSandboxRequest) GetForks() []SandboxFork {
	if o == nil {
		var ret []SandboxFork
		return ret
	}

	return o.Forks
}

// GetForksOk returns a tuple with the Forks field value
// and a boolean to check if the value has been set.
func (o *CreateSandboxRequest) GetForksOk() ([]SandboxFork, bool) {
	if o == nil {
		return nil, false
	}
	return o.Forks, true
}

// SetForks sets field value
func (o *CreateSandboxRequest) SetForks(v []SandboxFork) {
	o.Forks = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CreateSandboxRequest) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSandboxRequest) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CreateSandboxRequest) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CreateSandboxRequest) SetName(v string) {
	o.Name = &v
}

// GetResources returns the Resources field value if set, zero value otherwise.
func (o *CreateSandboxRequest) GetResources() []SandboxResource {
	if o == nil || o.Resources == nil {
		var ret []SandboxResource
		return ret
	}
	return o.Resources
}

// GetResourcesOk returns a tuple with the Resources field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSandboxRequest) GetResourcesOk() ([]SandboxResource, bool) {
	if o == nil || o.Resources == nil {
		return nil, false
	}
	return o.Resources, true
}

// HasResources returns a boolean if a field has been set.
func (o *CreateSandboxRequest) HasResources() bool {
	if o != nil && o.Resources != nil {
		return true
	}

	return false
}

// SetResources gets a reference to the given []SandboxResource and assigns it to the Resources field.
func (o *CreateSandboxRequest) SetResources(v []SandboxResource) {
	o.Resources = v
}

func (o CreateSandboxRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["cluster"] = o.Cluster
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.Endpoints != nil {
		toSerialize["endpoints"] = o.Endpoints
	}
	if true {
		toSerialize["forks"] = o.Forks
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Resources != nil {
		toSerialize["resources"] = o.Resources
	}
	return json.Marshal(toSerialize)
}

type NullableCreateSandboxRequest struct {
	value *CreateSandboxRequest
	isSet bool
}

func (v NullableCreateSandboxRequest) Get() *CreateSandboxRequest {
	return v.value
}

func (v *NullableCreateSandboxRequest) Set(val *CreateSandboxRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateSandboxRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateSandboxRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateSandboxRequest(val *CreateSandboxRequest) *NullableCreateSandboxRequest {
	return &NullableCreateSandboxRequest{value: val, isSet: true}
}

func (v NullableCreateSandboxRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateSandboxRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


