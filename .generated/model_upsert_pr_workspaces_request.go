/*
Signadot API

API for Signadot Sandboxes

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// UpsertPRWorkspacesRequest struct for UpsertPRWorkspacesRequest
type UpsertPRWorkspacesRequest struct {
	// Cluster within which this workspace should be created
	Cluster string `json:"cluster"`
	// Deprecated. use endpoints instead.
	DefaultService *string `json:"defaultService,omitempty"`
	// Deprecated. use endpoints instead.
	DefaultServicePort *int32 `json:"defaultServicePort,omitempty"`
	// Description of the purpose of this workspace.
	Description *string `json:"description,omitempty"`
	// Each endpoint specifies a target service or workload corresponding to which a preview URL will be generated.
	Endpoints []CreatePreviewEndpointRequest `json:"endpoints,omitempty"`
	// HeadCommit is the commit hash of the current HEAD of the PR branch. It is automatically computed if not specified but it is recommended that you specify this.
	HeadCommit *string `json:"headCommit,omitempty"`
	// Image replacement rules that are used to create the workspace.
	Images []V1ImageReplacement `json:"images,omitempty"`
	// Human-readable name of this workspace
	Name *string `json:"name,omitempty"`
	// Namespace within which this workspace should be created
	Namespace string `json:"namespace"`
}

// NewUpsertPRWorkspacesRequest instantiates a new UpsertPRWorkspacesRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpsertPRWorkspacesRequest(cluster string, namespace string) *UpsertPRWorkspacesRequest {
	this := UpsertPRWorkspacesRequest{}
	this.Cluster = cluster
	this.Namespace = namespace
	return &this
}

// NewUpsertPRWorkspacesRequestWithDefaults instantiates a new UpsertPRWorkspacesRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpsertPRWorkspacesRequestWithDefaults() *UpsertPRWorkspacesRequest {
	this := UpsertPRWorkspacesRequest{}
	return &this
}

// GetCluster returns the Cluster field value
func (o *UpsertPRWorkspacesRequest) GetCluster() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Cluster
}

// GetClusterOk returns a tuple with the Cluster field value
// and a boolean to check if the value has been set.
func (o *UpsertPRWorkspacesRequest) GetClusterOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Cluster, true
}

// SetCluster sets field value
func (o *UpsertPRWorkspacesRequest) SetCluster(v string) {
	o.Cluster = v
}

// GetDefaultService returns the DefaultService field value if set, zero value otherwise.
func (o *UpsertPRWorkspacesRequest) GetDefaultService() string {
	if o == nil || o.DefaultService == nil {
		var ret string
		return ret
	}
	return *o.DefaultService
}

// GetDefaultServiceOk returns a tuple with the DefaultService field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpsertPRWorkspacesRequest) GetDefaultServiceOk() (*string, bool) {
	if o == nil || o.DefaultService == nil {
		return nil, false
	}
	return o.DefaultService, true
}

// HasDefaultService returns a boolean if a field has been set.
func (o *UpsertPRWorkspacesRequest) HasDefaultService() bool {
	if o != nil && o.DefaultService != nil {
		return true
	}

	return false
}

// SetDefaultService gets a reference to the given string and assigns it to the DefaultService field.
func (o *UpsertPRWorkspacesRequest) SetDefaultService(v string) {
	o.DefaultService = &v
}

// GetDefaultServicePort returns the DefaultServicePort field value if set, zero value otherwise.
func (o *UpsertPRWorkspacesRequest) GetDefaultServicePort() int32 {
	if o == nil || o.DefaultServicePort == nil {
		var ret int32
		return ret
	}
	return *o.DefaultServicePort
}

// GetDefaultServicePortOk returns a tuple with the DefaultServicePort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpsertPRWorkspacesRequest) GetDefaultServicePortOk() (*int32, bool) {
	if o == nil || o.DefaultServicePort == nil {
		return nil, false
	}
	return o.DefaultServicePort, true
}

// HasDefaultServicePort returns a boolean if a field has been set.
func (o *UpsertPRWorkspacesRequest) HasDefaultServicePort() bool {
	if o != nil && o.DefaultServicePort != nil {
		return true
	}

	return false
}

// SetDefaultServicePort gets a reference to the given int32 and assigns it to the DefaultServicePort field.
func (o *UpsertPRWorkspacesRequest) SetDefaultServicePort(v int32) {
	o.DefaultServicePort = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *UpsertPRWorkspacesRequest) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpsertPRWorkspacesRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *UpsertPRWorkspacesRequest) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *UpsertPRWorkspacesRequest) SetDescription(v string) {
	o.Description = &v
}

// GetEndpoints returns the Endpoints field value if set, zero value otherwise.
func (o *UpsertPRWorkspacesRequest) GetEndpoints() []CreatePreviewEndpointRequest {
	if o == nil || o.Endpoints == nil {
		var ret []CreatePreviewEndpointRequest
		return ret
	}
	return o.Endpoints
}

// GetEndpointsOk returns a tuple with the Endpoints field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpsertPRWorkspacesRequest) GetEndpointsOk() ([]CreatePreviewEndpointRequest, bool) {
	if o == nil || o.Endpoints == nil {
		return nil, false
	}
	return o.Endpoints, true
}

// HasEndpoints returns a boolean if a field has been set.
func (o *UpsertPRWorkspacesRequest) HasEndpoints() bool {
	if o != nil && o.Endpoints != nil {
		return true
	}

	return false
}

// SetEndpoints gets a reference to the given []CreatePreviewEndpointRequest and assigns it to the Endpoints field.
func (o *UpsertPRWorkspacesRequest) SetEndpoints(v []CreatePreviewEndpointRequest) {
	o.Endpoints = v
}

// GetHeadCommit returns the HeadCommit field value if set, zero value otherwise.
func (o *UpsertPRWorkspacesRequest) GetHeadCommit() string {
	if o == nil || o.HeadCommit == nil {
		var ret string
		return ret
	}
	return *o.HeadCommit
}

// GetHeadCommitOk returns a tuple with the HeadCommit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpsertPRWorkspacesRequest) GetHeadCommitOk() (*string, bool) {
	if o == nil || o.HeadCommit == nil {
		return nil, false
	}
	return o.HeadCommit, true
}

// HasHeadCommit returns a boolean if a field has been set.
func (o *UpsertPRWorkspacesRequest) HasHeadCommit() bool {
	if o != nil && o.HeadCommit != nil {
		return true
	}

	return false
}

// SetHeadCommit gets a reference to the given string and assigns it to the HeadCommit field.
func (o *UpsertPRWorkspacesRequest) SetHeadCommit(v string) {
	o.HeadCommit = &v
}

// GetImages returns the Images field value if set, zero value otherwise.
func (o *UpsertPRWorkspacesRequest) GetImages() []V1ImageReplacement {
	if o == nil || o.Images == nil {
		var ret []V1ImageReplacement
		return ret
	}
	return o.Images
}

// GetImagesOk returns a tuple with the Images field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpsertPRWorkspacesRequest) GetImagesOk() ([]V1ImageReplacement, bool) {
	if o == nil || o.Images == nil {
		return nil, false
	}
	return o.Images, true
}

// HasImages returns a boolean if a field has been set.
func (o *UpsertPRWorkspacesRequest) HasImages() bool {
	if o != nil && o.Images != nil {
		return true
	}

	return false
}

// SetImages gets a reference to the given []V1ImageReplacement and assigns it to the Images field.
func (o *UpsertPRWorkspacesRequest) SetImages(v []V1ImageReplacement) {
	o.Images = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *UpsertPRWorkspacesRequest) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpsertPRWorkspacesRequest) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *UpsertPRWorkspacesRequest) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *UpsertPRWorkspacesRequest) SetName(v string) {
	o.Name = &v
}

// GetNamespace returns the Namespace field value
func (o *UpsertPRWorkspacesRequest) GetNamespace() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Namespace
}

// GetNamespaceOk returns a tuple with the Namespace field value
// and a boolean to check if the value has been set.
func (o *UpsertPRWorkspacesRequest) GetNamespaceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Namespace, true
}

// SetNamespace sets field value
func (o *UpsertPRWorkspacesRequest) SetNamespace(v string) {
	o.Namespace = v
}

func (o UpsertPRWorkspacesRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["cluster"] = o.Cluster
	}
	if o.DefaultService != nil {
		toSerialize["defaultService"] = o.DefaultService
	}
	if o.DefaultServicePort != nil {
		toSerialize["defaultServicePort"] = o.DefaultServicePort
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.Endpoints != nil {
		toSerialize["endpoints"] = o.Endpoints
	}
	if o.HeadCommit != nil {
		toSerialize["headCommit"] = o.HeadCommit
	}
	if o.Images != nil {
		toSerialize["images"] = o.Images
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["namespace"] = o.Namespace
	}
	return json.Marshal(toSerialize)
}

type NullableUpsertPRWorkspacesRequest struct {
	value *UpsertPRWorkspacesRequest
	isSet bool
}

func (v NullableUpsertPRWorkspacesRequest) Get() *UpsertPRWorkspacesRequest {
	return v.value
}

func (v *NullableUpsertPRWorkspacesRequest) Set(val *UpsertPRWorkspacesRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpsertPRWorkspacesRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpsertPRWorkspacesRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpsertPRWorkspacesRequest(val *UpsertPRWorkspacesRequest) *NullableUpsertPRWorkspacesRequest {
	return &NullableUpsertPRWorkspacesRequest{value: val, isSet: true}
}

func (v NullableUpsertPRWorkspacesRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpsertPRWorkspacesRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


