/*
Signadot API

API for Signadot Sandboxes

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// SandboxInfo struct for SandboxInfo
type SandboxInfo struct {
	ClusterName *string `json:"clusterName,omitempty"`
	CreatedAt *string `json:"createdAt,omitempty"`
	DefaultService *string `json:"defaultService,omitempty"`
	DefaultServicePort *int32 `json:"defaultServicePort,omitempty"`
	Description *string `json:"description,omitempty"`
	Id *string `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	Namespace *string `json:"namespace,omitempty"`
	PreviewEndpoints []PreviewEndpoint `json:"previewEndpoints,omitempty"`
	PreviewURL *string `json:"previewURL,omitempty"`
	UpdatedAt *string `json:"updatedAt,omitempty"`
}

// NewSandboxInfo instantiates a new SandboxInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSandboxInfo() *SandboxInfo {
	this := SandboxInfo{}
	return &this
}

// NewSandboxInfoWithDefaults instantiates a new SandboxInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSandboxInfoWithDefaults() *SandboxInfo {
	this := SandboxInfo{}
	return &this
}

// GetClusterName returns the ClusterName field value if set, zero value otherwise.
func (o *SandboxInfo) GetClusterName() string {
	if o == nil || o.ClusterName == nil {
		var ret string
		return ret
	}
	return *o.ClusterName
}

// GetClusterNameOk returns a tuple with the ClusterName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SandboxInfo) GetClusterNameOk() (*string, bool) {
	if o == nil || o.ClusterName == nil {
		return nil, false
	}
	return o.ClusterName, true
}

// HasClusterName returns a boolean if a field has been set.
func (o *SandboxInfo) HasClusterName() bool {
	if o != nil && o.ClusterName != nil {
		return true
	}

	return false
}

// SetClusterName gets a reference to the given string and assigns it to the ClusterName field.
func (o *SandboxInfo) SetClusterName(v string) {
	o.ClusterName = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *SandboxInfo) GetCreatedAt() string {
	if o == nil || o.CreatedAt == nil {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SandboxInfo) GetCreatedAtOk() (*string, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *SandboxInfo) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *SandboxInfo) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetDefaultService returns the DefaultService field value if set, zero value otherwise.
func (o *SandboxInfo) GetDefaultService() string {
	if o == nil || o.DefaultService == nil {
		var ret string
		return ret
	}
	return *o.DefaultService
}

// GetDefaultServiceOk returns a tuple with the DefaultService field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SandboxInfo) GetDefaultServiceOk() (*string, bool) {
	if o == nil || o.DefaultService == nil {
		return nil, false
	}
	return o.DefaultService, true
}

// HasDefaultService returns a boolean if a field has been set.
func (o *SandboxInfo) HasDefaultService() bool {
	if o != nil && o.DefaultService != nil {
		return true
	}

	return false
}

// SetDefaultService gets a reference to the given string and assigns it to the DefaultService field.
func (o *SandboxInfo) SetDefaultService(v string) {
	o.DefaultService = &v
}

// GetDefaultServicePort returns the DefaultServicePort field value if set, zero value otherwise.
func (o *SandboxInfo) GetDefaultServicePort() int32 {
	if o == nil || o.DefaultServicePort == nil {
		var ret int32
		return ret
	}
	return *o.DefaultServicePort
}

// GetDefaultServicePortOk returns a tuple with the DefaultServicePort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SandboxInfo) GetDefaultServicePortOk() (*int32, bool) {
	if o == nil || o.DefaultServicePort == nil {
		return nil, false
	}
	return o.DefaultServicePort, true
}

// HasDefaultServicePort returns a boolean if a field has been set.
func (o *SandboxInfo) HasDefaultServicePort() bool {
	if o != nil && o.DefaultServicePort != nil {
		return true
	}

	return false
}

// SetDefaultServicePort gets a reference to the given int32 and assigns it to the DefaultServicePort field.
func (o *SandboxInfo) SetDefaultServicePort(v int32) {
	o.DefaultServicePort = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *SandboxInfo) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SandboxInfo) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *SandboxInfo) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *SandboxInfo) SetDescription(v string) {
	o.Description = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *SandboxInfo) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SandboxInfo) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *SandboxInfo) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *SandboxInfo) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *SandboxInfo) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SandboxInfo) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *SandboxInfo) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *SandboxInfo) SetName(v string) {
	o.Name = &v
}

// GetNamespace returns the Namespace field value if set, zero value otherwise.
func (o *SandboxInfo) GetNamespace() string {
	if o == nil || o.Namespace == nil {
		var ret string
		return ret
	}
	return *o.Namespace
}

// GetNamespaceOk returns a tuple with the Namespace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SandboxInfo) GetNamespaceOk() (*string, bool) {
	if o == nil || o.Namespace == nil {
		return nil, false
	}
	return o.Namespace, true
}

// HasNamespace returns a boolean if a field has been set.
func (o *SandboxInfo) HasNamespace() bool {
	if o != nil && o.Namespace != nil {
		return true
	}

	return false
}

// SetNamespace gets a reference to the given string and assigns it to the Namespace field.
func (o *SandboxInfo) SetNamespace(v string) {
	o.Namespace = &v
}

// GetPreviewEndpoints returns the PreviewEndpoints field value if set, zero value otherwise.
func (o *SandboxInfo) GetPreviewEndpoints() []PreviewEndpoint {
	if o == nil || o.PreviewEndpoints == nil {
		var ret []PreviewEndpoint
		return ret
	}
	return o.PreviewEndpoints
}

// GetPreviewEndpointsOk returns a tuple with the PreviewEndpoints field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SandboxInfo) GetPreviewEndpointsOk() ([]PreviewEndpoint, bool) {
	if o == nil || o.PreviewEndpoints == nil {
		return nil, false
	}
	return o.PreviewEndpoints, true
}

// HasPreviewEndpoints returns a boolean if a field has been set.
func (o *SandboxInfo) HasPreviewEndpoints() bool {
	if o != nil && o.PreviewEndpoints != nil {
		return true
	}

	return false
}

// SetPreviewEndpoints gets a reference to the given []PreviewEndpoint and assigns it to the PreviewEndpoints field.
func (o *SandboxInfo) SetPreviewEndpoints(v []PreviewEndpoint) {
	o.PreviewEndpoints = v
}

// GetPreviewURL returns the PreviewURL field value if set, zero value otherwise.
func (o *SandboxInfo) GetPreviewURL() string {
	if o == nil || o.PreviewURL == nil {
		var ret string
		return ret
	}
	return *o.PreviewURL
}

// GetPreviewURLOk returns a tuple with the PreviewURL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SandboxInfo) GetPreviewURLOk() (*string, bool) {
	if o == nil || o.PreviewURL == nil {
		return nil, false
	}
	return o.PreviewURL, true
}

// HasPreviewURL returns a boolean if a field has been set.
func (o *SandboxInfo) HasPreviewURL() bool {
	if o != nil && o.PreviewURL != nil {
		return true
	}

	return false
}

// SetPreviewURL gets a reference to the given string and assigns it to the PreviewURL field.
func (o *SandboxInfo) SetPreviewURL(v string) {
	o.PreviewURL = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *SandboxInfo) GetUpdatedAt() string {
	if o == nil || o.UpdatedAt == nil {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SandboxInfo) GetUpdatedAtOk() (*string, bool) {
	if o == nil || o.UpdatedAt == nil {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *SandboxInfo) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt != nil {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *SandboxInfo) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

func (o SandboxInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ClusterName != nil {
		toSerialize["clusterName"] = o.ClusterName
	}
	if o.CreatedAt != nil {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if o.DefaultService != nil {
		toSerialize["defaultService"] = o.DefaultService
	}
	if o.DefaultServicePort != nil {
		toSerialize["defaultServicePort"] = o.DefaultServicePort
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Namespace != nil {
		toSerialize["namespace"] = o.Namespace
	}
	if o.PreviewEndpoints != nil {
		toSerialize["previewEndpoints"] = o.PreviewEndpoints
	}
	if o.PreviewURL != nil {
		toSerialize["previewURL"] = o.PreviewURL
	}
	if o.UpdatedAt != nil {
		toSerialize["updatedAt"] = o.UpdatedAt
	}
	return json.Marshal(toSerialize)
}

type NullableSandboxInfo struct {
	value *SandboxInfo
	isSet bool
}

func (v NullableSandboxInfo) Get() *SandboxInfo {
	return v.value
}

func (v *NullableSandboxInfo) Set(val *SandboxInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableSandboxInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableSandboxInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSandboxInfo(val *SandboxInfo) *NullableSandboxInfo {
	return &NullableSandboxInfo{value: val, isSet: true}
}

func (v NullableSandboxInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSandboxInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


