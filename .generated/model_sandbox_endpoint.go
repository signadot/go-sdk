/*
Signadot API

API for Signadot Sandboxes

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// SandboxEndpoint struct for SandboxEndpoint
type SandboxEndpoint struct {
	// Hostname that this endpoint points to
	Host *string `json:"host,omitempty"`
	// Name of the endpoint
	Name *string `json:"name,omitempty"`
	// Port it will map to on the specified host
	Port *int32 `json:"port,omitempty"`
	// Protocol that this endpoint uses
	Protocol *string `json:"protocol,omitempty"`
}

// NewSandboxEndpoint instantiates a new SandboxEndpoint object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSandboxEndpoint() *SandboxEndpoint {
	this := SandboxEndpoint{}
	return &this
}

// NewSandboxEndpointWithDefaults instantiates a new SandboxEndpoint object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSandboxEndpointWithDefaults() *SandboxEndpoint {
	this := SandboxEndpoint{}
	return &this
}

// GetHost returns the Host field value if set, zero value otherwise.
func (o *SandboxEndpoint) GetHost() string {
	if o == nil || o.Host == nil {
		var ret string
		return ret
	}
	return *o.Host
}

// GetHostOk returns a tuple with the Host field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SandboxEndpoint) GetHostOk() (*string, bool) {
	if o == nil || o.Host == nil {
		return nil, false
	}
	return o.Host, true
}

// HasHost returns a boolean if a field has been set.
func (o *SandboxEndpoint) HasHost() bool {
	if o != nil && o.Host != nil {
		return true
	}

	return false
}

// SetHost gets a reference to the given string and assigns it to the Host field.
func (o *SandboxEndpoint) SetHost(v string) {
	o.Host = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *SandboxEndpoint) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SandboxEndpoint) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *SandboxEndpoint) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *SandboxEndpoint) SetName(v string) {
	o.Name = &v
}

// GetPort returns the Port field value if set, zero value otherwise.
func (o *SandboxEndpoint) GetPort() int32 {
	if o == nil || o.Port == nil {
		var ret int32
		return ret
	}
	return *o.Port
}

// GetPortOk returns a tuple with the Port field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SandboxEndpoint) GetPortOk() (*int32, bool) {
	if o == nil || o.Port == nil {
		return nil, false
	}
	return o.Port, true
}

// HasPort returns a boolean if a field has been set.
func (o *SandboxEndpoint) HasPort() bool {
	if o != nil && o.Port != nil {
		return true
	}

	return false
}

// SetPort gets a reference to the given int32 and assigns it to the Port field.
func (o *SandboxEndpoint) SetPort(v int32) {
	o.Port = &v
}

// GetProtocol returns the Protocol field value if set, zero value otherwise.
func (o *SandboxEndpoint) GetProtocol() string {
	if o == nil || o.Protocol == nil {
		var ret string
		return ret
	}
	return *o.Protocol
}

// GetProtocolOk returns a tuple with the Protocol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SandboxEndpoint) GetProtocolOk() (*string, bool) {
	if o == nil || o.Protocol == nil {
		return nil, false
	}
	return o.Protocol, true
}

// HasProtocol returns a boolean if a field has been set.
func (o *SandboxEndpoint) HasProtocol() bool {
	if o != nil && o.Protocol != nil {
		return true
	}

	return false
}

// SetProtocol gets a reference to the given string and assigns it to the Protocol field.
func (o *SandboxEndpoint) SetProtocol(v string) {
	o.Protocol = &v
}

func (o SandboxEndpoint) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Host != nil {
		toSerialize["host"] = o.Host
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Port != nil {
		toSerialize["port"] = o.Port
	}
	if o.Protocol != nil {
		toSerialize["protocol"] = o.Protocol
	}
	return json.Marshal(toSerialize)
}

type NullableSandboxEndpoint struct {
	value *SandboxEndpoint
	isSet bool
}

func (v NullableSandboxEndpoint) Get() *SandboxEndpoint {
	return v.value
}

func (v *NullableSandboxEndpoint) Set(val *SandboxEndpoint) {
	v.value = val
	v.isSet = true
}

func (v NullableSandboxEndpoint) IsSet() bool {
	return v.isSet
}

func (v *NullableSandboxEndpoint) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSandboxEndpoint(val *SandboxEndpoint) *NullableSandboxEndpoint {
	return &NullableSandboxEndpoint{value: val, isSet: true}
}

func (v NullableSandboxEndpoint) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSandboxEndpoint) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


