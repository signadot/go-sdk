/*
Signadot API

API for Signadot Sandboxes

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// GetSandboxByIdResponse struct for GetSandboxByIdResponse
type GetSandboxByIdResponse struct {
	Sandbox *SandboxDetails `json:"sandbox,omitempty"`
}

// NewGetSandboxByIdResponse instantiates a new GetSandboxByIdResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetSandboxByIdResponse() *GetSandboxByIdResponse {
	this := GetSandboxByIdResponse{}
	return &this
}

// NewGetSandboxByIdResponseWithDefaults instantiates a new GetSandboxByIdResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetSandboxByIdResponseWithDefaults() *GetSandboxByIdResponse {
	this := GetSandboxByIdResponse{}
	return &this
}

// GetSandbox returns the Sandbox field value if set, zero value otherwise.
func (o *GetSandboxByIdResponse) GetSandbox() SandboxDetails {
	if o == nil || o.Sandbox == nil {
		var ret SandboxDetails
		return ret
	}
	return *o.Sandbox
}

// GetSandboxOk returns a tuple with the Sandbox field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSandboxByIdResponse) GetSandboxOk() (*SandboxDetails, bool) {
	if o == nil || o.Sandbox == nil {
		return nil, false
	}
	return o.Sandbox, true
}

// HasSandbox returns a boolean if a field has been set.
func (o *GetSandboxByIdResponse) HasSandbox() bool {
	if o != nil && o.Sandbox != nil {
		return true
	}

	return false
}

// SetSandbox gets a reference to the given SandboxDetails and assigns it to the Sandbox field.
func (o *GetSandboxByIdResponse) SetSandbox(v SandboxDetails) {
	o.Sandbox = &v
}

func (o GetSandboxByIdResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Sandbox != nil {
		toSerialize["sandbox"] = o.Sandbox
	}
	return json.Marshal(toSerialize)
}

type NullableGetSandboxByIdResponse struct {
	value *GetSandboxByIdResponse
	isSet bool
}

func (v NullableGetSandboxByIdResponse) Get() *GetSandboxByIdResponse {
	return v.value
}

func (v *NullableGetSandboxByIdResponse) Set(val *GetSandboxByIdResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetSandboxByIdResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetSandboxByIdResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetSandboxByIdResponse(val *GetSandboxByIdResponse) *NullableGetSandboxByIdResponse {
	return &NullableGetSandboxByIdResponse{value: val, isSet: true}
}

func (v NullableGetSandboxByIdResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetSandboxByIdResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


