/*
Signadot API

API for Signadot Sandboxes

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// SandboxCustomizations struct for SandboxCustomizations
type SandboxCustomizations struct {
	// Env var modifications that will be applied to the forked workload
	Env []EnvOp `json:"env,omitempty"`
	// One or more docker images that will be applied to the forked workload
	Images []Image `json:"images,omitempty"`
	Patch *CustomPatch `json:"patch,omitempty"`
}

// NewSandboxCustomizations instantiates a new SandboxCustomizations object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSandboxCustomizations() *SandboxCustomizations {
	this := SandboxCustomizations{}
	return &this
}

// NewSandboxCustomizationsWithDefaults instantiates a new SandboxCustomizations object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSandboxCustomizationsWithDefaults() *SandboxCustomizations {
	this := SandboxCustomizations{}
	return &this
}

// GetEnv returns the Env field value if set, zero value otherwise.
func (o *SandboxCustomizations) GetEnv() []EnvOp {
	if o == nil || o.Env == nil {
		var ret []EnvOp
		return ret
	}
	return o.Env
}

// GetEnvOk returns a tuple with the Env field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SandboxCustomizations) GetEnvOk() ([]EnvOp, bool) {
	if o == nil || o.Env == nil {
		return nil, false
	}
	return o.Env, true
}

// HasEnv returns a boolean if a field has been set.
func (o *SandboxCustomizations) HasEnv() bool {
	if o != nil && o.Env != nil {
		return true
	}

	return false
}

// SetEnv gets a reference to the given []EnvOp and assigns it to the Env field.
func (o *SandboxCustomizations) SetEnv(v []EnvOp) {
	o.Env = v
}

// GetImages returns the Images field value if set, zero value otherwise.
func (o *SandboxCustomizations) GetImages() []Image {
	if o == nil || o.Images == nil {
		var ret []Image
		return ret
	}
	return o.Images
}

// GetImagesOk returns a tuple with the Images field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SandboxCustomizations) GetImagesOk() ([]Image, bool) {
	if o == nil || o.Images == nil {
		return nil, false
	}
	return o.Images, true
}

// HasImages returns a boolean if a field has been set.
func (o *SandboxCustomizations) HasImages() bool {
	if o != nil && o.Images != nil {
		return true
	}

	return false
}

// SetImages gets a reference to the given []Image and assigns it to the Images field.
func (o *SandboxCustomizations) SetImages(v []Image) {
	o.Images = v
}

// GetPatch returns the Patch field value if set, zero value otherwise.
func (o *SandboxCustomizations) GetPatch() CustomPatch {
	if o == nil || o.Patch == nil {
		var ret CustomPatch
		return ret
	}
	return *o.Patch
}

// GetPatchOk returns a tuple with the Patch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SandboxCustomizations) GetPatchOk() (*CustomPatch, bool) {
	if o == nil || o.Patch == nil {
		return nil, false
	}
	return o.Patch, true
}

// HasPatch returns a boolean if a field has been set.
func (o *SandboxCustomizations) HasPatch() bool {
	if o != nil && o.Patch != nil {
		return true
	}

	return false
}

// SetPatch gets a reference to the given CustomPatch and assigns it to the Patch field.
func (o *SandboxCustomizations) SetPatch(v CustomPatch) {
	o.Patch = &v
}

func (o SandboxCustomizations) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Env != nil {
		toSerialize["env"] = o.Env
	}
	if o.Images != nil {
		toSerialize["images"] = o.Images
	}
	if o.Patch != nil {
		toSerialize["patch"] = o.Patch
	}
	return json.Marshal(toSerialize)
}

type NullableSandboxCustomizations struct {
	value *SandboxCustomizations
	isSet bool
}

func (v NullableSandboxCustomizations) Get() *SandboxCustomizations {
	return v.value
}

func (v *NullableSandboxCustomizations) Set(val *SandboxCustomizations) {
	v.value = val
	v.isSet = true
}

func (v NullableSandboxCustomizations) IsSet() bool {
	return v.isSet
}

func (v *NullableSandboxCustomizations) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSandboxCustomizations(val *SandboxCustomizations) *NullableSandboxCustomizations {
	return &NullableSandboxCustomizations{value: val, isSet: true}
}

func (v NullableSandboxCustomizations) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSandboxCustomizations) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


