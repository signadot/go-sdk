/*
Signadot API

API for Signadot Sandboxes

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ApierrsResponse struct for ApierrsResponse
type ApierrsResponse struct {
	Error *string `json:"error,omitempty"`
	RequestID *string `json:"requestID,omitempty"`
}

// NewApierrsResponse instantiates a new ApierrsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApierrsResponse() *ApierrsResponse {
	this := ApierrsResponse{}
	return &this
}

// NewApierrsResponseWithDefaults instantiates a new ApierrsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApierrsResponseWithDefaults() *ApierrsResponse {
	this := ApierrsResponse{}
	return &this
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *ApierrsResponse) GetError() string {
	if o == nil || o.Error == nil {
		var ret string
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApierrsResponse) GetErrorOk() (*string, bool) {
	if o == nil || o.Error == nil {
		return nil, false
	}
	return o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *ApierrsResponse) HasError() bool {
	if o != nil && o.Error != nil {
		return true
	}

	return false
}

// SetError gets a reference to the given string and assigns it to the Error field.
func (o *ApierrsResponse) SetError(v string) {
	o.Error = &v
}

// GetRequestID returns the RequestID field value if set, zero value otherwise.
func (o *ApierrsResponse) GetRequestID() string {
	if o == nil || o.RequestID == nil {
		var ret string
		return ret
	}
	return *o.RequestID
}

// GetRequestIDOk returns a tuple with the RequestID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApierrsResponse) GetRequestIDOk() (*string, bool) {
	if o == nil || o.RequestID == nil {
		return nil, false
	}
	return o.RequestID, true
}

// HasRequestID returns a boolean if a field has been set.
func (o *ApierrsResponse) HasRequestID() bool {
	if o != nil && o.RequestID != nil {
		return true
	}

	return false
}

// SetRequestID gets a reference to the given string and assigns it to the RequestID field.
func (o *ApierrsResponse) SetRequestID(v string) {
	o.RequestID = &v
}

func (o ApierrsResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Error != nil {
		toSerialize["error"] = o.Error
	}
	if o.RequestID != nil {
		toSerialize["requestID"] = o.RequestID
	}
	return json.Marshal(toSerialize)
}

type NullableApierrsResponse struct {
	value *ApierrsResponse
	isSet bool
}

func (v NullableApierrsResponse) Get() *ApierrsResponse {
	return v.value
}

func (v *NullableApierrsResponse) Set(val *ApierrsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableApierrsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableApierrsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApierrsResponse(val *ApierrsResponse) *NullableApierrsResponse {
	return &NullableApierrsResponse{value: val, isSet: true}
}

func (v NullableApierrsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApierrsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


