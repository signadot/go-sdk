/*
Signadot API

API for Signadot Sandboxes

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// CreateSandboxResponse struct for CreateSandboxResponse
type CreateSandboxResponse struct {
	PreviewEndpoints []PreviewEndpoint `json:"previewEndpoints,omitempty"`
	SandboxID *string `json:"sandboxID,omitempty"`
	Warnings []string `json:"warnings,omitempty"`
}

// NewCreateSandboxResponse instantiates a new CreateSandboxResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateSandboxResponse() *CreateSandboxResponse {
	this := CreateSandboxResponse{}
	return &this
}

// NewCreateSandboxResponseWithDefaults instantiates a new CreateSandboxResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateSandboxResponseWithDefaults() *CreateSandboxResponse {
	this := CreateSandboxResponse{}
	return &this
}

// GetPreviewEndpoints returns the PreviewEndpoints field value if set, zero value otherwise.
func (o *CreateSandboxResponse) GetPreviewEndpoints() []PreviewEndpoint {
	if o == nil || o.PreviewEndpoints == nil {
		var ret []PreviewEndpoint
		return ret
	}
	return o.PreviewEndpoints
}

// GetPreviewEndpointsOk returns a tuple with the PreviewEndpoints field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSandboxResponse) GetPreviewEndpointsOk() ([]PreviewEndpoint, bool) {
	if o == nil || o.PreviewEndpoints == nil {
		return nil, false
	}
	return o.PreviewEndpoints, true
}

// HasPreviewEndpoints returns a boolean if a field has been set.
func (o *CreateSandboxResponse) HasPreviewEndpoints() bool {
	if o != nil && o.PreviewEndpoints != nil {
		return true
	}

	return false
}

// SetPreviewEndpoints gets a reference to the given []PreviewEndpoint and assigns it to the PreviewEndpoints field.
func (o *CreateSandboxResponse) SetPreviewEndpoints(v []PreviewEndpoint) {
	o.PreviewEndpoints = v
}

// GetSandboxID returns the SandboxID field value if set, zero value otherwise.
func (o *CreateSandboxResponse) GetSandboxID() string {
	if o == nil || o.SandboxID == nil {
		var ret string
		return ret
	}
	return *o.SandboxID
}

// GetSandboxIDOk returns a tuple with the SandboxID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSandboxResponse) GetSandboxIDOk() (*string, bool) {
	if o == nil || o.SandboxID == nil {
		return nil, false
	}
	return o.SandboxID, true
}

// HasSandboxID returns a boolean if a field has been set.
func (o *CreateSandboxResponse) HasSandboxID() bool {
	if o != nil && o.SandboxID != nil {
		return true
	}

	return false
}

// SetSandboxID gets a reference to the given string and assigns it to the SandboxID field.
func (o *CreateSandboxResponse) SetSandboxID(v string) {
	o.SandboxID = &v
}

// GetWarnings returns the Warnings field value if set, zero value otherwise.
func (o *CreateSandboxResponse) GetWarnings() []string {
	if o == nil || o.Warnings == nil {
		var ret []string
		return ret
	}
	return o.Warnings
}

// GetWarningsOk returns a tuple with the Warnings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSandboxResponse) GetWarningsOk() ([]string, bool) {
	if o == nil || o.Warnings == nil {
		return nil, false
	}
	return o.Warnings, true
}

// HasWarnings returns a boolean if a field has been set.
func (o *CreateSandboxResponse) HasWarnings() bool {
	if o != nil && o.Warnings != nil {
		return true
	}

	return false
}

// SetWarnings gets a reference to the given []string and assigns it to the Warnings field.
func (o *CreateSandboxResponse) SetWarnings(v []string) {
	o.Warnings = v
}

func (o CreateSandboxResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.PreviewEndpoints != nil {
		toSerialize["previewEndpoints"] = o.PreviewEndpoints
	}
	if o.SandboxID != nil {
		toSerialize["sandboxID"] = o.SandboxID
	}
	if o.Warnings != nil {
		toSerialize["warnings"] = o.Warnings
	}
	return json.Marshal(toSerialize)
}

type NullableCreateSandboxResponse struct {
	value *CreateSandboxResponse
	isSet bool
}

func (v NullableCreateSandboxResponse) Get() *CreateSandboxResponse {
	return v.value
}

func (v *NullableCreateSandboxResponse) Set(val *CreateSandboxResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateSandboxResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateSandboxResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateSandboxResponse(val *CreateSandboxResponse) *NullableCreateSandboxResponse {
	return &NullableCreateSandboxResponse{value: val, isSet: true}
}

func (v NullableCreateSandboxResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateSandboxResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


