// Code generated by go-swagger; DO NOT EDIT.

package artifacts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/signadot/go-sdk/models"
)

// InfoJobAttemptArtifactReader is a Reader for the InfoJobAttemptArtifact structure.
type InfoJobAttemptArtifactReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *InfoJobAttemptArtifactReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewInfoJobAttemptArtifactOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewInfoJobAttemptArtifactBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewInfoJobAttemptArtifactUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewInfoJobAttemptArtifactNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewInfoJobAttemptArtifactInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /orgs/{orgName}/artifacts/jobs/{jobName}/attempts/{jobAttempt}/objects/] info-job-attempt-artifact", response, response.Code())
	}
}

// NewInfoJobAttemptArtifactOK creates a InfoJobAttemptArtifactOK with default headers values
func NewInfoJobAttemptArtifactOK() *InfoJobAttemptArtifactOK {
	return &InfoJobAttemptArtifactOK{}
}

/*
InfoJobAttemptArtifactOK describes a response with status code 200, with default header values.

OK
*/
type InfoJobAttemptArtifactOK struct {
	Payload *models.JobArtifactInfo
}

// IsSuccess returns true when this info job attempt artifact o k response has a 2xx status code
func (o *InfoJobAttemptArtifactOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this info job attempt artifact o k response has a 3xx status code
func (o *InfoJobAttemptArtifactOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this info job attempt artifact o k response has a 4xx status code
func (o *InfoJobAttemptArtifactOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this info job attempt artifact o k response has a 5xx status code
func (o *InfoJobAttemptArtifactOK) IsServerError() bool {
	return false
}

// IsCode returns true when this info job attempt artifact o k response a status code equal to that given
func (o *InfoJobAttemptArtifactOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the info job attempt artifact o k response
func (o *InfoJobAttemptArtifactOK) Code() int {
	return 200
}

func (o *InfoJobAttemptArtifactOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /orgs/{orgName}/artifacts/jobs/{jobName}/attempts/{jobAttempt}/objects/][%d] infoJobAttemptArtifactOK %s", 200, payload)
}

func (o *InfoJobAttemptArtifactOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /orgs/{orgName}/artifacts/jobs/{jobName}/attempts/{jobAttempt}/objects/][%d] infoJobAttemptArtifactOK %s", 200, payload)
}

func (o *InfoJobAttemptArtifactOK) GetPayload() *models.JobArtifactInfo {
	return o.Payload
}

func (o *InfoJobAttemptArtifactOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.JobArtifactInfo)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewInfoJobAttemptArtifactBadRequest creates a InfoJobAttemptArtifactBadRequest with default headers values
func NewInfoJobAttemptArtifactBadRequest() *InfoJobAttemptArtifactBadRequest {
	return &InfoJobAttemptArtifactBadRequest{}
}

/*
InfoJobAttemptArtifactBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type InfoJobAttemptArtifactBadRequest struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this info job attempt artifact bad request response has a 2xx status code
func (o *InfoJobAttemptArtifactBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this info job attempt artifact bad request response has a 3xx status code
func (o *InfoJobAttemptArtifactBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this info job attempt artifact bad request response has a 4xx status code
func (o *InfoJobAttemptArtifactBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this info job attempt artifact bad request response has a 5xx status code
func (o *InfoJobAttemptArtifactBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this info job attempt artifact bad request response a status code equal to that given
func (o *InfoJobAttemptArtifactBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the info job attempt artifact bad request response
func (o *InfoJobAttemptArtifactBadRequest) Code() int {
	return 400
}

func (o *InfoJobAttemptArtifactBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /orgs/{orgName}/artifacts/jobs/{jobName}/attempts/{jobAttempt}/objects/][%d] infoJobAttemptArtifactBadRequest %s", 400, payload)
}

func (o *InfoJobAttemptArtifactBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /orgs/{orgName}/artifacts/jobs/{jobName}/attempts/{jobAttempt}/objects/][%d] infoJobAttemptArtifactBadRequest %s", 400, payload)
}

func (o *InfoJobAttemptArtifactBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *InfoJobAttemptArtifactBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewInfoJobAttemptArtifactUnauthorized creates a InfoJobAttemptArtifactUnauthorized with default headers values
func NewInfoJobAttemptArtifactUnauthorized() *InfoJobAttemptArtifactUnauthorized {
	return &InfoJobAttemptArtifactUnauthorized{}
}

/*
InfoJobAttemptArtifactUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type InfoJobAttemptArtifactUnauthorized struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this info job attempt artifact unauthorized response has a 2xx status code
func (o *InfoJobAttemptArtifactUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this info job attempt artifact unauthorized response has a 3xx status code
func (o *InfoJobAttemptArtifactUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this info job attempt artifact unauthorized response has a 4xx status code
func (o *InfoJobAttemptArtifactUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this info job attempt artifact unauthorized response has a 5xx status code
func (o *InfoJobAttemptArtifactUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this info job attempt artifact unauthorized response a status code equal to that given
func (o *InfoJobAttemptArtifactUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the info job attempt artifact unauthorized response
func (o *InfoJobAttemptArtifactUnauthorized) Code() int {
	return 401
}

func (o *InfoJobAttemptArtifactUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /orgs/{orgName}/artifacts/jobs/{jobName}/attempts/{jobAttempt}/objects/][%d] infoJobAttemptArtifactUnauthorized %s", 401, payload)
}

func (o *InfoJobAttemptArtifactUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /orgs/{orgName}/artifacts/jobs/{jobName}/attempts/{jobAttempt}/objects/][%d] infoJobAttemptArtifactUnauthorized %s", 401, payload)
}

func (o *InfoJobAttemptArtifactUnauthorized) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *InfoJobAttemptArtifactUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewInfoJobAttemptArtifactNotFound creates a InfoJobAttemptArtifactNotFound with default headers values
func NewInfoJobAttemptArtifactNotFound() *InfoJobAttemptArtifactNotFound {
	return &InfoJobAttemptArtifactNotFound{}
}

/*
InfoJobAttemptArtifactNotFound describes a response with status code 404, with default header values.

Not Found
*/
type InfoJobAttemptArtifactNotFound struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this info job attempt artifact not found response has a 2xx status code
func (o *InfoJobAttemptArtifactNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this info job attempt artifact not found response has a 3xx status code
func (o *InfoJobAttemptArtifactNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this info job attempt artifact not found response has a 4xx status code
func (o *InfoJobAttemptArtifactNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this info job attempt artifact not found response has a 5xx status code
func (o *InfoJobAttemptArtifactNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this info job attempt artifact not found response a status code equal to that given
func (o *InfoJobAttemptArtifactNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the info job attempt artifact not found response
func (o *InfoJobAttemptArtifactNotFound) Code() int {
	return 404
}

func (o *InfoJobAttemptArtifactNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /orgs/{orgName}/artifacts/jobs/{jobName}/attempts/{jobAttempt}/objects/][%d] infoJobAttemptArtifactNotFound %s", 404, payload)
}

func (o *InfoJobAttemptArtifactNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /orgs/{orgName}/artifacts/jobs/{jobName}/attempts/{jobAttempt}/objects/][%d] infoJobAttemptArtifactNotFound %s", 404, payload)
}

func (o *InfoJobAttemptArtifactNotFound) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *InfoJobAttemptArtifactNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewInfoJobAttemptArtifactInternalServerError creates a InfoJobAttemptArtifactInternalServerError with default headers values
func NewInfoJobAttemptArtifactInternalServerError() *InfoJobAttemptArtifactInternalServerError {
	return &InfoJobAttemptArtifactInternalServerError{}
}

/*
InfoJobAttemptArtifactInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type InfoJobAttemptArtifactInternalServerError struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this info job attempt artifact internal server error response has a 2xx status code
func (o *InfoJobAttemptArtifactInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this info job attempt artifact internal server error response has a 3xx status code
func (o *InfoJobAttemptArtifactInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this info job attempt artifact internal server error response has a 4xx status code
func (o *InfoJobAttemptArtifactInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this info job attempt artifact internal server error response has a 5xx status code
func (o *InfoJobAttemptArtifactInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this info job attempt artifact internal server error response a status code equal to that given
func (o *InfoJobAttemptArtifactInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the info job attempt artifact internal server error response
func (o *InfoJobAttemptArtifactInternalServerError) Code() int {
	return 500
}

func (o *InfoJobAttemptArtifactInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /orgs/{orgName}/artifacts/jobs/{jobName}/attempts/{jobAttempt}/objects/][%d] infoJobAttemptArtifactInternalServerError %s", 500, payload)
}

func (o *InfoJobAttemptArtifactInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /orgs/{orgName}/artifacts/jobs/{jobName}/attempts/{jobAttempt}/objects/][%d] infoJobAttemptArtifactInternalServerError %s", 500, payload)
}

func (o *InfoJobAttemptArtifactInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *InfoJobAttemptArtifactInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
