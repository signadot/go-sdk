// Code generated by go-swagger; DO NOT EDIT.

package artifacts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/signadot/go-sdk/models"
)

// UploadJobAttemptArtifactReader is a Reader for the UploadJobAttemptArtifact structure.
type UploadJobAttemptArtifactReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UploadJobAttemptArtifactReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUploadJobAttemptArtifactOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUploadJobAttemptArtifactBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUploadJobAttemptArtifactUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewUploadJobAttemptArtifactRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUploadJobAttemptArtifactInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /orgs/{orgName}/artifacts/jobs/{jobName}/attempts/{jobAttempt}/objects/upload] upload-job-attempt-artifact", response, response.Code())
	}
}

// NewUploadJobAttemptArtifactOK creates a UploadJobAttemptArtifactOK with default headers values
func NewUploadJobAttemptArtifactOK() *UploadJobAttemptArtifactOK {
	return &UploadJobAttemptArtifactOK{}
}

/*
UploadJobAttemptArtifactOK describes a response with status code 200, with default header values.

OK
*/
type UploadJobAttemptArtifactOK struct {
	Payload models.EmptyResponse
}

// IsSuccess returns true when this upload job attempt artifact o k response has a 2xx status code
func (o *UploadJobAttemptArtifactOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this upload job attempt artifact o k response has a 3xx status code
func (o *UploadJobAttemptArtifactOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this upload job attempt artifact o k response has a 4xx status code
func (o *UploadJobAttemptArtifactOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this upload job attempt artifact o k response has a 5xx status code
func (o *UploadJobAttemptArtifactOK) IsServerError() bool {
	return false
}

// IsCode returns true when this upload job attempt artifact o k response a status code equal to that given
func (o *UploadJobAttemptArtifactOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the upload job attempt artifact o k response
func (o *UploadJobAttemptArtifactOK) Code() int {
	return 200
}

func (o *UploadJobAttemptArtifactOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /orgs/{orgName}/artifacts/jobs/{jobName}/attempts/{jobAttempt}/objects/upload][%d] uploadJobAttemptArtifactOK %s", 200, payload)
}

func (o *UploadJobAttemptArtifactOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /orgs/{orgName}/artifacts/jobs/{jobName}/attempts/{jobAttempt}/objects/upload][%d] uploadJobAttemptArtifactOK %s", 200, payload)
}

func (o *UploadJobAttemptArtifactOK) GetPayload() models.EmptyResponse {
	return o.Payload
}

func (o *UploadJobAttemptArtifactOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUploadJobAttemptArtifactBadRequest creates a UploadJobAttemptArtifactBadRequest with default headers values
func NewUploadJobAttemptArtifactBadRequest() *UploadJobAttemptArtifactBadRequest {
	return &UploadJobAttemptArtifactBadRequest{}
}

/*
UploadJobAttemptArtifactBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type UploadJobAttemptArtifactBadRequest struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this upload job attempt artifact bad request response has a 2xx status code
func (o *UploadJobAttemptArtifactBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this upload job attempt artifact bad request response has a 3xx status code
func (o *UploadJobAttemptArtifactBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this upload job attempt artifact bad request response has a 4xx status code
func (o *UploadJobAttemptArtifactBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this upload job attempt artifact bad request response has a 5xx status code
func (o *UploadJobAttemptArtifactBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this upload job attempt artifact bad request response a status code equal to that given
func (o *UploadJobAttemptArtifactBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the upload job attempt artifact bad request response
func (o *UploadJobAttemptArtifactBadRequest) Code() int {
	return 400
}

func (o *UploadJobAttemptArtifactBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /orgs/{orgName}/artifacts/jobs/{jobName}/attempts/{jobAttempt}/objects/upload][%d] uploadJobAttemptArtifactBadRequest %s", 400, payload)
}

func (o *UploadJobAttemptArtifactBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /orgs/{orgName}/artifacts/jobs/{jobName}/attempts/{jobAttempt}/objects/upload][%d] uploadJobAttemptArtifactBadRequest %s", 400, payload)
}

func (o *UploadJobAttemptArtifactBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *UploadJobAttemptArtifactBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUploadJobAttemptArtifactUnauthorized creates a UploadJobAttemptArtifactUnauthorized with default headers values
func NewUploadJobAttemptArtifactUnauthorized() *UploadJobAttemptArtifactUnauthorized {
	return &UploadJobAttemptArtifactUnauthorized{}
}

/*
UploadJobAttemptArtifactUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type UploadJobAttemptArtifactUnauthorized struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this upload job attempt artifact unauthorized response has a 2xx status code
func (o *UploadJobAttemptArtifactUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this upload job attempt artifact unauthorized response has a 3xx status code
func (o *UploadJobAttemptArtifactUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this upload job attempt artifact unauthorized response has a 4xx status code
func (o *UploadJobAttemptArtifactUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this upload job attempt artifact unauthorized response has a 5xx status code
func (o *UploadJobAttemptArtifactUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this upload job attempt artifact unauthorized response a status code equal to that given
func (o *UploadJobAttemptArtifactUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the upload job attempt artifact unauthorized response
func (o *UploadJobAttemptArtifactUnauthorized) Code() int {
	return 401
}

func (o *UploadJobAttemptArtifactUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /orgs/{orgName}/artifacts/jobs/{jobName}/attempts/{jobAttempt}/objects/upload][%d] uploadJobAttemptArtifactUnauthorized %s", 401, payload)
}

func (o *UploadJobAttemptArtifactUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /orgs/{orgName}/artifacts/jobs/{jobName}/attempts/{jobAttempt}/objects/upload][%d] uploadJobAttemptArtifactUnauthorized %s", 401, payload)
}

func (o *UploadJobAttemptArtifactUnauthorized) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *UploadJobAttemptArtifactUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUploadJobAttemptArtifactRequestEntityTooLarge creates a UploadJobAttemptArtifactRequestEntityTooLarge with default headers values
func NewUploadJobAttemptArtifactRequestEntityTooLarge() *UploadJobAttemptArtifactRequestEntityTooLarge {
	return &UploadJobAttemptArtifactRequestEntityTooLarge{}
}

/*
UploadJobAttemptArtifactRequestEntityTooLarge describes a response with status code 413, with default header values.

Request Entity Too Large
*/
type UploadJobAttemptArtifactRequestEntityTooLarge struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this upload job attempt artifact request entity too large response has a 2xx status code
func (o *UploadJobAttemptArtifactRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this upload job attempt artifact request entity too large response has a 3xx status code
func (o *UploadJobAttemptArtifactRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this upload job attempt artifact request entity too large response has a 4xx status code
func (o *UploadJobAttemptArtifactRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this upload job attempt artifact request entity too large response has a 5xx status code
func (o *UploadJobAttemptArtifactRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this upload job attempt artifact request entity too large response a status code equal to that given
func (o *UploadJobAttemptArtifactRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

// Code gets the status code for the upload job attempt artifact request entity too large response
func (o *UploadJobAttemptArtifactRequestEntityTooLarge) Code() int {
	return 413
}

func (o *UploadJobAttemptArtifactRequestEntityTooLarge) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /orgs/{orgName}/artifacts/jobs/{jobName}/attempts/{jobAttempt}/objects/upload][%d] uploadJobAttemptArtifactRequestEntityTooLarge %s", 413, payload)
}

func (o *UploadJobAttemptArtifactRequestEntityTooLarge) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /orgs/{orgName}/artifacts/jobs/{jobName}/attempts/{jobAttempt}/objects/upload][%d] uploadJobAttemptArtifactRequestEntityTooLarge %s", 413, payload)
}

func (o *UploadJobAttemptArtifactRequestEntityTooLarge) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *UploadJobAttemptArtifactRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUploadJobAttemptArtifactInternalServerError creates a UploadJobAttemptArtifactInternalServerError with default headers values
func NewUploadJobAttemptArtifactInternalServerError() *UploadJobAttemptArtifactInternalServerError {
	return &UploadJobAttemptArtifactInternalServerError{}
}

/*
UploadJobAttemptArtifactInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type UploadJobAttemptArtifactInternalServerError struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this upload job attempt artifact internal server error response has a 2xx status code
func (o *UploadJobAttemptArtifactInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this upload job attempt artifact internal server error response has a 3xx status code
func (o *UploadJobAttemptArtifactInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this upload job attempt artifact internal server error response has a 4xx status code
func (o *UploadJobAttemptArtifactInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this upload job attempt artifact internal server error response has a 5xx status code
func (o *UploadJobAttemptArtifactInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this upload job attempt artifact internal server error response a status code equal to that given
func (o *UploadJobAttemptArtifactInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the upload job attempt artifact internal server error response
func (o *UploadJobAttemptArtifactInternalServerError) Code() int {
	return 500
}

func (o *UploadJobAttemptArtifactInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /orgs/{orgName}/artifacts/jobs/{jobName}/attempts/{jobAttempt}/objects/upload][%d] uploadJobAttemptArtifactInternalServerError %s", 500, payload)
}

func (o *UploadJobAttemptArtifactInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /orgs/{orgName}/artifacts/jobs/{jobName}/attempts/{jobAttempt}/objects/upload][%d] uploadJobAttemptArtifactInternalServerError %s", 500, payload)
}

func (o *UploadJobAttemptArtifactInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *UploadJobAttemptArtifactInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
