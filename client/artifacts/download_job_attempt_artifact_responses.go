// Code generated by go-swagger; DO NOT EDIT.

package artifacts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/signadot/go-sdk/models"
)

// DownloadJobAttemptArtifactReader is a Reader for the DownloadJobAttemptArtifact structure.
type DownloadJobAttemptArtifactReader struct {
	formats strfmt.Registry
	writer  io.Writer
}

// ReadResponse reads a server response into the received o.
func (o *DownloadJobAttemptArtifactReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDownloadJobAttemptArtifactOK(o.writer)
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 206:
		result := NewDownloadJobAttemptArtifactPartialContent(o.writer)
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDownloadJobAttemptArtifactBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDownloadJobAttemptArtifactUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDownloadJobAttemptArtifactInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /orgs/{orgName}/artifacts/jobs/{jobName}/attempts/{jobAttempt}/objects/download] download-job-attempt-artifact", response, response.Code())
	}
}

// NewDownloadJobAttemptArtifactOK creates a DownloadJobAttemptArtifactOK with default headers values
func NewDownloadJobAttemptArtifactOK(writer io.Writer) *DownloadJobAttemptArtifactOK {
	return &DownloadJobAttemptArtifactOK{

		Payload: writer,
	}
}

/*
DownloadJobAttemptArtifactOK describes a response with status code 200, with default header values.

Artifact successfully downloaded
*/
type DownloadJobAttemptArtifactOK struct {

	/* A base64-encoded, 256-bit SHA-256 digest of the artifact
	 */
	SignadotArtifactChecksumSHA256 string

	/* Date and time when the artifact was last modified
	 */
	SignadotArtifactLastModified string

	/* A json-encoded, map of the artifact metadata
	 */
	SignadotArtifactMetadata string

	Payload io.Writer
}

// IsSuccess returns true when this download job attempt artifact o k response has a 2xx status code
func (o *DownloadJobAttemptArtifactOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this download job attempt artifact o k response has a 3xx status code
func (o *DownloadJobAttemptArtifactOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this download job attempt artifact o k response has a 4xx status code
func (o *DownloadJobAttemptArtifactOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this download job attempt artifact o k response has a 5xx status code
func (o *DownloadJobAttemptArtifactOK) IsServerError() bool {
	return false
}

// IsCode returns true when this download job attempt artifact o k response a status code equal to that given
func (o *DownloadJobAttemptArtifactOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the download job attempt artifact o k response
func (o *DownloadJobAttemptArtifactOK) Code() int {
	return 200
}

func (o *DownloadJobAttemptArtifactOK) Error() string {
	return fmt.Sprintf("[GET /orgs/{orgName}/artifacts/jobs/{jobName}/attempts/{jobAttempt}/objects/download][%d] downloadJobAttemptArtifactOK  %+v", 200, o.Payload)
}

func (o *DownloadJobAttemptArtifactOK) String() string {
	return fmt.Sprintf("[GET /orgs/{orgName}/artifacts/jobs/{jobName}/attempts/{jobAttempt}/objects/download][%d] downloadJobAttemptArtifactOK  %+v", 200, o.Payload)
}

func (o *DownloadJobAttemptArtifactOK) GetPayload() io.Writer {
	return o.Payload
}

func (o *DownloadJobAttemptArtifactOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header signadot-artifact-checksumSHA256
	hdrSignadotArtifactChecksumSHA256 := response.GetHeader("signadot-artifact-checksumSHA256")

	if hdrSignadotArtifactChecksumSHA256 != "" {
		o.SignadotArtifactChecksumSHA256 = hdrSignadotArtifactChecksumSHA256
	}

	// hydrates response header signadot-artifact-last-modified
	hdrSignadotArtifactLastModified := response.GetHeader("signadot-artifact-last-modified")

	if hdrSignadotArtifactLastModified != "" {
		o.SignadotArtifactLastModified = hdrSignadotArtifactLastModified
	}

	// hydrates response header signadot-artifact-metadata
	hdrSignadotArtifactMetadata := response.GetHeader("signadot-artifact-metadata")

	if hdrSignadotArtifactMetadata != "" {
		o.SignadotArtifactMetadata = hdrSignadotArtifactMetadata
	}

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDownloadJobAttemptArtifactPartialContent creates a DownloadJobAttemptArtifactPartialContent with default headers values
func NewDownloadJobAttemptArtifactPartialContent(writer io.Writer) *DownloadJobAttemptArtifactPartialContent {
	return &DownloadJobAttemptArtifactPartialContent{

		Payload: writer,
	}
}

/*
DownloadJobAttemptArtifactPartialContent describes a response with status code 206, with default header values.

Artifact range successfully downloaded
*/
type DownloadJobAttemptArtifactPartialContent struct {

	/* Date and time when the artifact was last modified
	 */
	SignadotArtifactLastModified string

	/* A json-encoded, map of the artifact metadata
	 */
	SignadotArtifactMetadata string

	Payload io.Writer
}

// IsSuccess returns true when this download job attempt artifact partial content response has a 2xx status code
func (o *DownloadJobAttemptArtifactPartialContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this download job attempt artifact partial content response has a 3xx status code
func (o *DownloadJobAttemptArtifactPartialContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this download job attempt artifact partial content response has a 4xx status code
func (o *DownloadJobAttemptArtifactPartialContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this download job attempt artifact partial content response has a 5xx status code
func (o *DownloadJobAttemptArtifactPartialContent) IsServerError() bool {
	return false
}

// IsCode returns true when this download job attempt artifact partial content response a status code equal to that given
func (o *DownloadJobAttemptArtifactPartialContent) IsCode(code int) bool {
	return code == 206
}

// Code gets the status code for the download job attempt artifact partial content response
func (o *DownloadJobAttemptArtifactPartialContent) Code() int {
	return 206
}

func (o *DownloadJobAttemptArtifactPartialContent) Error() string {
	return fmt.Sprintf("[GET /orgs/{orgName}/artifacts/jobs/{jobName}/attempts/{jobAttempt}/objects/download][%d] downloadJobAttemptArtifactPartialContent  %+v", 206, o.Payload)
}

func (o *DownloadJobAttemptArtifactPartialContent) String() string {
	return fmt.Sprintf("[GET /orgs/{orgName}/artifacts/jobs/{jobName}/attempts/{jobAttempt}/objects/download][%d] downloadJobAttemptArtifactPartialContent  %+v", 206, o.Payload)
}

func (o *DownloadJobAttemptArtifactPartialContent) GetPayload() io.Writer {
	return o.Payload
}

func (o *DownloadJobAttemptArtifactPartialContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header signadot-artifact-last-modified
	hdrSignadotArtifactLastModified := response.GetHeader("signadot-artifact-last-modified")

	if hdrSignadotArtifactLastModified != "" {
		o.SignadotArtifactLastModified = hdrSignadotArtifactLastModified
	}

	// hydrates response header signadot-artifact-metadata
	hdrSignadotArtifactMetadata := response.GetHeader("signadot-artifact-metadata")

	if hdrSignadotArtifactMetadata != "" {
		o.SignadotArtifactMetadata = hdrSignadotArtifactMetadata
	}

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDownloadJobAttemptArtifactBadRequest creates a DownloadJobAttemptArtifactBadRequest with default headers values
func NewDownloadJobAttemptArtifactBadRequest() *DownloadJobAttemptArtifactBadRequest {
	return &DownloadJobAttemptArtifactBadRequest{}
}

/*
DownloadJobAttemptArtifactBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type DownloadJobAttemptArtifactBadRequest struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this download job attempt artifact bad request response has a 2xx status code
func (o *DownloadJobAttemptArtifactBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this download job attempt artifact bad request response has a 3xx status code
func (o *DownloadJobAttemptArtifactBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this download job attempt artifact bad request response has a 4xx status code
func (o *DownloadJobAttemptArtifactBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this download job attempt artifact bad request response has a 5xx status code
func (o *DownloadJobAttemptArtifactBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this download job attempt artifact bad request response a status code equal to that given
func (o *DownloadJobAttemptArtifactBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the download job attempt artifact bad request response
func (o *DownloadJobAttemptArtifactBadRequest) Code() int {
	return 400
}

func (o *DownloadJobAttemptArtifactBadRequest) Error() string {
	return fmt.Sprintf("[GET /orgs/{orgName}/artifacts/jobs/{jobName}/attempts/{jobAttempt}/objects/download][%d] downloadJobAttemptArtifactBadRequest  %+v", 400, o.Payload)
}

func (o *DownloadJobAttemptArtifactBadRequest) String() string {
	return fmt.Sprintf("[GET /orgs/{orgName}/artifacts/jobs/{jobName}/attempts/{jobAttempt}/objects/download][%d] downloadJobAttemptArtifactBadRequest  %+v", 400, o.Payload)
}

func (o *DownloadJobAttemptArtifactBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *DownloadJobAttemptArtifactBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDownloadJobAttemptArtifactUnauthorized creates a DownloadJobAttemptArtifactUnauthorized with default headers values
func NewDownloadJobAttemptArtifactUnauthorized() *DownloadJobAttemptArtifactUnauthorized {
	return &DownloadJobAttemptArtifactUnauthorized{}
}

/*
DownloadJobAttemptArtifactUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type DownloadJobAttemptArtifactUnauthorized struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this download job attempt artifact unauthorized response has a 2xx status code
func (o *DownloadJobAttemptArtifactUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this download job attempt artifact unauthorized response has a 3xx status code
func (o *DownloadJobAttemptArtifactUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this download job attempt artifact unauthorized response has a 4xx status code
func (o *DownloadJobAttemptArtifactUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this download job attempt artifact unauthorized response has a 5xx status code
func (o *DownloadJobAttemptArtifactUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this download job attempt artifact unauthorized response a status code equal to that given
func (o *DownloadJobAttemptArtifactUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the download job attempt artifact unauthorized response
func (o *DownloadJobAttemptArtifactUnauthorized) Code() int {
	return 401
}

func (o *DownloadJobAttemptArtifactUnauthorized) Error() string {
	return fmt.Sprintf("[GET /orgs/{orgName}/artifacts/jobs/{jobName}/attempts/{jobAttempt}/objects/download][%d] downloadJobAttemptArtifactUnauthorized  %+v", 401, o.Payload)
}

func (o *DownloadJobAttemptArtifactUnauthorized) String() string {
	return fmt.Sprintf("[GET /orgs/{orgName}/artifacts/jobs/{jobName}/attempts/{jobAttempt}/objects/download][%d] downloadJobAttemptArtifactUnauthorized  %+v", 401, o.Payload)
}

func (o *DownloadJobAttemptArtifactUnauthorized) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *DownloadJobAttemptArtifactUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDownloadJobAttemptArtifactInternalServerError creates a DownloadJobAttemptArtifactInternalServerError with default headers values
func NewDownloadJobAttemptArtifactInternalServerError() *DownloadJobAttemptArtifactInternalServerError {
	return &DownloadJobAttemptArtifactInternalServerError{}
}

/*
DownloadJobAttemptArtifactInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type DownloadJobAttemptArtifactInternalServerError struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this download job attempt artifact internal server error response has a 2xx status code
func (o *DownloadJobAttemptArtifactInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this download job attempt artifact internal server error response has a 3xx status code
func (o *DownloadJobAttemptArtifactInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this download job attempt artifact internal server error response has a 4xx status code
func (o *DownloadJobAttemptArtifactInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this download job attempt artifact internal server error response has a 5xx status code
func (o *DownloadJobAttemptArtifactInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this download job attempt artifact internal server error response a status code equal to that given
func (o *DownloadJobAttemptArtifactInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the download job attempt artifact internal server error response
func (o *DownloadJobAttemptArtifactInternalServerError) Code() int {
	return 500
}

func (o *DownloadJobAttemptArtifactInternalServerError) Error() string {
	return fmt.Sprintf("[GET /orgs/{orgName}/artifacts/jobs/{jobName}/attempts/{jobAttempt}/objects/download][%d] downloadJobAttemptArtifactInternalServerError  %+v", 500, o.Payload)
}

func (o *DownloadJobAttemptArtifactInternalServerError) String() string {
	return fmt.Sprintf("[GET /orgs/{orgName}/artifacts/jobs/{jobName}/attempts/{jobAttempt}/objects/download][%d] downloadJobAttemptArtifactInternalServerError  %+v", 500, o.Payload)
}

func (o *DownloadJobAttemptArtifactInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *DownloadJobAttemptArtifactInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
