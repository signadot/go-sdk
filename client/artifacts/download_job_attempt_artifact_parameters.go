// Code generated by go-swagger; DO NOT EDIT.

package artifacts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewDownloadJobAttemptArtifactParams creates a new DownloadJobAttemptArtifactParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewDownloadJobAttemptArtifactParams() *DownloadJobAttemptArtifactParams {
	return &DownloadJobAttemptArtifactParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewDownloadJobAttemptArtifactParamsWithTimeout creates a new DownloadJobAttemptArtifactParams object
// with the ability to set a timeout on a request.
func NewDownloadJobAttemptArtifactParamsWithTimeout(timeout time.Duration) *DownloadJobAttemptArtifactParams {
	return &DownloadJobAttemptArtifactParams{
		timeout: timeout,
	}
}

// NewDownloadJobAttemptArtifactParamsWithContext creates a new DownloadJobAttemptArtifactParams object
// with the ability to set a context for a request.
func NewDownloadJobAttemptArtifactParamsWithContext(ctx context.Context) *DownloadJobAttemptArtifactParams {
	return &DownloadJobAttemptArtifactParams{
		Context: ctx,
	}
}

// NewDownloadJobAttemptArtifactParamsWithHTTPClient creates a new DownloadJobAttemptArtifactParams object
// with the ability to set a custom HTTPClient for a request.
func NewDownloadJobAttemptArtifactParamsWithHTTPClient(client *http.Client) *DownloadJobAttemptArtifactParams {
	return &DownloadJobAttemptArtifactParams{
		HTTPClient: client,
	}
}

/*
DownloadJobAttemptArtifactParams contains all the parameters to send to the API endpoint

	for the download job attempt artifact operation.

	Typically these are written to a http.Request.
*/
type DownloadJobAttemptArtifactParams struct {

	/* Range.

	   Downloads the specified byte range of the artifact. Retrieving multiple ranges of data per request is not supported
	*/
	Range *string

	/* JobAttempt.

	   Job Attempt ID
	*/
	JobAttempt int64

	/* JobName.

	   Job Name
	*/
	JobName string

	/* OrgName.

	   Signadot Org Name
	*/
	OrgName string

	/* Path.

	   Artifact Path
	*/
	Path string

	/* Space.

	   Artifact space, one of 'user' or 'system' (by default 'user')
	*/
	Space *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the download job attempt artifact params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *DownloadJobAttemptArtifactParams) WithDefaults() *DownloadJobAttemptArtifactParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the download job attempt artifact params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *DownloadJobAttemptArtifactParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the download job attempt artifact params
func (o *DownloadJobAttemptArtifactParams) WithTimeout(timeout time.Duration) *DownloadJobAttemptArtifactParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the download job attempt artifact params
func (o *DownloadJobAttemptArtifactParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the download job attempt artifact params
func (o *DownloadJobAttemptArtifactParams) WithContext(ctx context.Context) *DownloadJobAttemptArtifactParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the download job attempt artifact params
func (o *DownloadJobAttemptArtifactParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the download job attempt artifact params
func (o *DownloadJobAttemptArtifactParams) WithHTTPClient(client *http.Client) *DownloadJobAttemptArtifactParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the download job attempt artifact params
func (o *DownloadJobAttemptArtifactParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithRange adds the rangeVar to the download job attempt artifact params
func (o *DownloadJobAttemptArtifactParams) WithRange(rangeVar *string) *DownloadJobAttemptArtifactParams {
	o.SetRange(rangeVar)
	return o
}

// SetRange adds the range to the download job attempt artifact params
func (o *DownloadJobAttemptArtifactParams) SetRange(rangeVar *string) {
	o.Range = rangeVar
}

// WithJobAttempt adds the jobAttempt to the download job attempt artifact params
func (o *DownloadJobAttemptArtifactParams) WithJobAttempt(jobAttempt int64) *DownloadJobAttemptArtifactParams {
	o.SetJobAttempt(jobAttempt)
	return o
}

// SetJobAttempt adds the jobAttempt to the download job attempt artifact params
func (o *DownloadJobAttemptArtifactParams) SetJobAttempt(jobAttempt int64) {
	o.JobAttempt = jobAttempt
}

// WithJobName adds the jobName to the download job attempt artifact params
func (o *DownloadJobAttemptArtifactParams) WithJobName(jobName string) *DownloadJobAttemptArtifactParams {
	o.SetJobName(jobName)
	return o
}

// SetJobName adds the jobName to the download job attempt artifact params
func (o *DownloadJobAttemptArtifactParams) SetJobName(jobName string) {
	o.JobName = jobName
}

// WithOrgName adds the orgName to the download job attempt artifact params
func (o *DownloadJobAttemptArtifactParams) WithOrgName(orgName string) *DownloadJobAttemptArtifactParams {
	o.SetOrgName(orgName)
	return o
}

// SetOrgName adds the orgName to the download job attempt artifact params
func (o *DownloadJobAttemptArtifactParams) SetOrgName(orgName string) {
	o.OrgName = orgName
}

// WithPath adds the path to the download job attempt artifact params
func (o *DownloadJobAttemptArtifactParams) WithPath(path string) *DownloadJobAttemptArtifactParams {
	o.SetPath(path)
	return o
}

// SetPath adds the path to the download job attempt artifact params
func (o *DownloadJobAttemptArtifactParams) SetPath(path string) {
	o.Path = path
}

// WithSpace adds the space to the download job attempt artifact params
func (o *DownloadJobAttemptArtifactParams) WithSpace(space *string) *DownloadJobAttemptArtifactParams {
	o.SetSpace(space)
	return o
}

// SetSpace adds the space to the download job attempt artifact params
func (o *DownloadJobAttemptArtifactParams) SetSpace(space *string) {
	o.Space = space
}

// WriteToRequest writes these params to a swagger request
func (o *DownloadJobAttemptArtifactParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Range != nil {

		// header param Range
		if err := r.SetHeaderParam("Range", *o.Range); err != nil {
			return err
		}
	}

	// path param jobAttempt
	if err := r.SetPathParam("jobAttempt", swag.FormatInt64(o.JobAttempt)); err != nil {
		return err
	}

	// path param jobName
	if err := r.SetPathParam("jobName", o.JobName); err != nil {
		return err
	}

	// path param orgName
	if err := r.SetPathParam("orgName", o.OrgName); err != nil {
		return err
	}

	// query param path
	qrPath := o.Path
	qPath := qrPath
	if qPath != "" {

		if err := r.SetQueryParam("path", qPath); err != nil {
			return err
		}
	}

	if o.Space != nil {

		// query param space
		var qrSpace string

		if o.Space != nil {
			qrSpace = *o.Space
		}
		qSpace := qrSpace
		if qSpace != "" {

			if err := r.SetQueryParam("space", qSpace); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
