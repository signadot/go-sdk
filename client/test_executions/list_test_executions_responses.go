// Code generated by go-swagger; DO NOT EDIT.

package test_executions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/signadot/go-sdk/models"
)

// ListTestExecutionsReader is a Reader for the ListTestExecutions structure.
type ListTestExecutionsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListTestExecutionsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListTestExecutionsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewListTestExecutionsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewListTestExecutionsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 502:
		result := NewListTestExecutionsBadGateway()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /orgs/{orgName}/tests/{testName}/executions/] list-test-executions", response, response.Code())
	}
}

// NewListTestExecutionsOK creates a ListTestExecutionsOK with default headers values
func NewListTestExecutionsOK() *ListTestExecutionsOK {
	return &ListTestExecutionsOK{}
}

/*
ListTestExecutionsOK describes a response with status code 200, with default header values.

OK
*/
type ListTestExecutionsOK struct {
	Payload []*models.TestExecution
}

// IsSuccess returns true when this list test executions o k response has a 2xx status code
func (o *ListTestExecutionsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list test executions o k response has a 3xx status code
func (o *ListTestExecutionsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list test executions o k response has a 4xx status code
func (o *ListTestExecutionsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list test executions o k response has a 5xx status code
func (o *ListTestExecutionsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list test executions o k response a status code equal to that given
func (o *ListTestExecutionsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the list test executions o k response
func (o *ListTestExecutionsOK) Code() int {
	return 200
}

func (o *ListTestExecutionsOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /orgs/{orgName}/tests/{testName}/executions/][%d] listTestExecutionsOK %s", 200, payload)
}

func (o *ListTestExecutionsOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /orgs/{orgName}/tests/{testName}/executions/][%d] listTestExecutionsOK %s", 200, payload)
}

func (o *ListTestExecutionsOK) GetPayload() []*models.TestExecution {
	return o.Payload
}

func (o *ListTestExecutionsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListTestExecutionsBadRequest creates a ListTestExecutionsBadRequest with default headers values
func NewListTestExecutionsBadRequest() *ListTestExecutionsBadRequest {
	return &ListTestExecutionsBadRequest{}
}

/*
ListTestExecutionsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type ListTestExecutionsBadRequest struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this list test executions bad request response has a 2xx status code
func (o *ListTestExecutionsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list test executions bad request response has a 3xx status code
func (o *ListTestExecutionsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list test executions bad request response has a 4xx status code
func (o *ListTestExecutionsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this list test executions bad request response has a 5xx status code
func (o *ListTestExecutionsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this list test executions bad request response a status code equal to that given
func (o *ListTestExecutionsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the list test executions bad request response
func (o *ListTestExecutionsBadRequest) Code() int {
	return 400
}

func (o *ListTestExecutionsBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /orgs/{orgName}/tests/{testName}/executions/][%d] listTestExecutionsBadRequest %s", 400, payload)
}

func (o *ListTestExecutionsBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /orgs/{orgName}/tests/{testName}/executions/][%d] listTestExecutionsBadRequest %s", 400, payload)
}

func (o *ListTestExecutionsBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *ListTestExecutionsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListTestExecutionsUnauthorized creates a ListTestExecutionsUnauthorized with default headers values
func NewListTestExecutionsUnauthorized() *ListTestExecutionsUnauthorized {
	return &ListTestExecutionsUnauthorized{}
}

/*
ListTestExecutionsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type ListTestExecutionsUnauthorized struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this list test executions unauthorized response has a 2xx status code
func (o *ListTestExecutionsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list test executions unauthorized response has a 3xx status code
func (o *ListTestExecutionsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list test executions unauthorized response has a 4xx status code
func (o *ListTestExecutionsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this list test executions unauthorized response has a 5xx status code
func (o *ListTestExecutionsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this list test executions unauthorized response a status code equal to that given
func (o *ListTestExecutionsUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the list test executions unauthorized response
func (o *ListTestExecutionsUnauthorized) Code() int {
	return 401
}

func (o *ListTestExecutionsUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /orgs/{orgName}/tests/{testName}/executions/][%d] listTestExecutionsUnauthorized %s", 401, payload)
}

func (o *ListTestExecutionsUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /orgs/{orgName}/tests/{testName}/executions/][%d] listTestExecutionsUnauthorized %s", 401, payload)
}

func (o *ListTestExecutionsUnauthorized) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *ListTestExecutionsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListTestExecutionsBadGateway creates a ListTestExecutionsBadGateway with default headers values
func NewListTestExecutionsBadGateway() *ListTestExecutionsBadGateway {
	return &ListTestExecutionsBadGateway{}
}

/*
ListTestExecutionsBadGateway describes a response with status code 502, with default header values.

Bad Gateway
*/
type ListTestExecutionsBadGateway struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this list test executions bad gateway response has a 2xx status code
func (o *ListTestExecutionsBadGateway) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list test executions bad gateway response has a 3xx status code
func (o *ListTestExecutionsBadGateway) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list test executions bad gateway response has a 4xx status code
func (o *ListTestExecutionsBadGateway) IsClientError() bool {
	return false
}

// IsServerError returns true when this list test executions bad gateway response has a 5xx status code
func (o *ListTestExecutionsBadGateway) IsServerError() bool {
	return true
}

// IsCode returns true when this list test executions bad gateway response a status code equal to that given
func (o *ListTestExecutionsBadGateway) IsCode(code int) bool {
	return code == 502
}

// Code gets the status code for the list test executions bad gateway response
func (o *ListTestExecutionsBadGateway) Code() int {
	return 502
}

func (o *ListTestExecutionsBadGateway) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /orgs/{orgName}/tests/{testName}/executions/][%d] listTestExecutionsBadGateway %s", 502, payload)
}

func (o *ListTestExecutionsBadGateway) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /orgs/{orgName}/tests/{testName}/executions/][%d] listTestExecutionsBadGateway %s", 502, payload)
}

func (o *ListTestExecutionsBadGateway) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *ListTestExecutionsBadGateway) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
