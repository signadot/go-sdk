// Code generated by go-swagger; DO NOT EDIT.

package test_executions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/signadot/go-sdk/models"
)

// CreateHostedTestExecutionReader is a Reader for the CreateHostedTestExecution structure.
type CreateHostedTestExecutionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateHostedTestExecutionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateHostedTestExecutionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateHostedTestExecutionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCreateHostedTestExecutionUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 502:
		result := NewCreateHostedTestExecutionBadGateway()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /orgs/{orgName}/tests/{testName}/executions/] create-hosted-test-execution", response, response.Code())
	}
}

// NewCreateHostedTestExecutionOK creates a CreateHostedTestExecutionOK with default headers values
func NewCreateHostedTestExecutionOK() *CreateHostedTestExecutionOK {
	return &CreateHostedTestExecutionOK{}
}

/*
CreateHostedTestExecutionOK describes a response with status code 200, with default header values.

OK
*/
type CreateHostedTestExecutionOK struct {
	Payload *models.TestExecution
}

// IsSuccess returns true when this create hosted test execution o k response has a 2xx status code
func (o *CreateHostedTestExecutionOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create hosted test execution o k response has a 3xx status code
func (o *CreateHostedTestExecutionOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create hosted test execution o k response has a 4xx status code
func (o *CreateHostedTestExecutionOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this create hosted test execution o k response has a 5xx status code
func (o *CreateHostedTestExecutionOK) IsServerError() bool {
	return false
}

// IsCode returns true when this create hosted test execution o k response a status code equal to that given
func (o *CreateHostedTestExecutionOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the create hosted test execution o k response
func (o *CreateHostedTestExecutionOK) Code() int {
	return 200
}

func (o *CreateHostedTestExecutionOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /orgs/{orgName}/tests/{testName}/executions/][%d] createHostedTestExecutionOK %s", 200, payload)
}

func (o *CreateHostedTestExecutionOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /orgs/{orgName}/tests/{testName}/executions/][%d] createHostedTestExecutionOK %s", 200, payload)
}

func (o *CreateHostedTestExecutionOK) GetPayload() *models.TestExecution {
	return o.Payload
}

func (o *CreateHostedTestExecutionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TestExecution)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateHostedTestExecutionBadRequest creates a CreateHostedTestExecutionBadRequest with default headers values
func NewCreateHostedTestExecutionBadRequest() *CreateHostedTestExecutionBadRequest {
	return &CreateHostedTestExecutionBadRequest{}
}

/*
CreateHostedTestExecutionBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type CreateHostedTestExecutionBadRequest struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this create hosted test execution bad request response has a 2xx status code
func (o *CreateHostedTestExecutionBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create hosted test execution bad request response has a 3xx status code
func (o *CreateHostedTestExecutionBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create hosted test execution bad request response has a 4xx status code
func (o *CreateHostedTestExecutionBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create hosted test execution bad request response has a 5xx status code
func (o *CreateHostedTestExecutionBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create hosted test execution bad request response a status code equal to that given
func (o *CreateHostedTestExecutionBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the create hosted test execution bad request response
func (o *CreateHostedTestExecutionBadRequest) Code() int {
	return 400
}

func (o *CreateHostedTestExecutionBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /orgs/{orgName}/tests/{testName}/executions/][%d] createHostedTestExecutionBadRequest %s", 400, payload)
}

func (o *CreateHostedTestExecutionBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /orgs/{orgName}/tests/{testName}/executions/][%d] createHostedTestExecutionBadRequest %s", 400, payload)
}

func (o *CreateHostedTestExecutionBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *CreateHostedTestExecutionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateHostedTestExecutionUnauthorized creates a CreateHostedTestExecutionUnauthorized with default headers values
func NewCreateHostedTestExecutionUnauthorized() *CreateHostedTestExecutionUnauthorized {
	return &CreateHostedTestExecutionUnauthorized{}
}

/*
CreateHostedTestExecutionUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type CreateHostedTestExecutionUnauthorized struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this create hosted test execution unauthorized response has a 2xx status code
func (o *CreateHostedTestExecutionUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create hosted test execution unauthorized response has a 3xx status code
func (o *CreateHostedTestExecutionUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create hosted test execution unauthorized response has a 4xx status code
func (o *CreateHostedTestExecutionUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this create hosted test execution unauthorized response has a 5xx status code
func (o *CreateHostedTestExecutionUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this create hosted test execution unauthorized response a status code equal to that given
func (o *CreateHostedTestExecutionUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the create hosted test execution unauthorized response
func (o *CreateHostedTestExecutionUnauthorized) Code() int {
	return 401
}

func (o *CreateHostedTestExecutionUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /orgs/{orgName}/tests/{testName}/executions/][%d] createHostedTestExecutionUnauthorized %s", 401, payload)
}

func (o *CreateHostedTestExecutionUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /orgs/{orgName}/tests/{testName}/executions/][%d] createHostedTestExecutionUnauthorized %s", 401, payload)
}

func (o *CreateHostedTestExecutionUnauthorized) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *CreateHostedTestExecutionUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateHostedTestExecutionBadGateway creates a CreateHostedTestExecutionBadGateway with default headers values
func NewCreateHostedTestExecutionBadGateway() *CreateHostedTestExecutionBadGateway {
	return &CreateHostedTestExecutionBadGateway{}
}

/*
CreateHostedTestExecutionBadGateway describes a response with status code 502, with default header values.

Bad Gateway
*/
type CreateHostedTestExecutionBadGateway struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this create hosted test execution bad gateway response has a 2xx status code
func (o *CreateHostedTestExecutionBadGateway) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create hosted test execution bad gateway response has a 3xx status code
func (o *CreateHostedTestExecutionBadGateway) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create hosted test execution bad gateway response has a 4xx status code
func (o *CreateHostedTestExecutionBadGateway) IsClientError() bool {
	return false
}

// IsServerError returns true when this create hosted test execution bad gateway response has a 5xx status code
func (o *CreateHostedTestExecutionBadGateway) IsServerError() bool {
	return true
}

// IsCode returns true when this create hosted test execution bad gateway response a status code equal to that given
func (o *CreateHostedTestExecutionBadGateway) IsCode(code int) bool {
	return code == 502
}

// Code gets the status code for the create hosted test execution bad gateway response
func (o *CreateHostedTestExecutionBadGateway) Code() int {
	return 502
}

func (o *CreateHostedTestExecutionBadGateway) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /orgs/{orgName}/tests/{testName}/executions/][%d] createHostedTestExecutionBadGateway %s", 502, payload)
}

func (o *CreateHostedTestExecutionBadGateway) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /orgs/{orgName}/tests/{testName}/executions/][%d] createHostedTestExecutionBadGateway %s", 502, payload)
}

func (o *CreateHostedTestExecutionBadGateway) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *CreateHostedTestExecutionBadGateway) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
