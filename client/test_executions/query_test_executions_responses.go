// Code generated by go-swagger; DO NOT EDIT.

package test_executions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/signadot/go-sdk/models"
)

// QueryTestExecutionsReader is a Reader for the QueryTestExecutions structure.
type QueryTestExecutionsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *QueryTestExecutionsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewQueryTestExecutionsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewQueryTestExecutionsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewQueryTestExecutionsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 502:
		result := NewQueryTestExecutionsBadGateway()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /orgs/{orgName}/tests/executions/] query-test-executions", response, response.Code())
	}
}

// NewQueryTestExecutionsOK creates a QueryTestExecutionsOK with default headers values
func NewQueryTestExecutionsOK() *QueryTestExecutionsOK {
	return &QueryTestExecutionsOK{}
}

/*
QueryTestExecutionsOK describes a response with status code 200, with default header values.

OK
*/
type QueryTestExecutionsOK struct {
	Payload []*models.TestexecutionsQueryResult
}

// IsSuccess returns true when this query test executions o k response has a 2xx status code
func (o *QueryTestExecutionsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this query test executions o k response has a 3xx status code
func (o *QueryTestExecutionsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this query test executions o k response has a 4xx status code
func (o *QueryTestExecutionsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this query test executions o k response has a 5xx status code
func (o *QueryTestExecutionsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this query test executions o k response a status code equal to that given
func (o *QueryTestExecutionsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the query test executions o k response
func (o *QueryTestExecutionsOK) Code() int {
	return 200
}

func (o *QueryTestExecutionsOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /orgs/{orgName}/tests/executions/][%d] queryTestExecutionsOK %s", 200, payload)
}

func (o *QueryTestExecutionsOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /orgs/{orgName}/tests/executions/][%d] queryTestExecutionsOK %s", 200, payload)
}

func (o *QueryTestExecutionsOK) GetPayload() []*models.TestexecutionsQueryResult {
	return o.Payload
}

func (o *QueryTestExecutionsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewQueryTestExecutionsBadRequest creates a QueryTestExecutionsBadRequest with default headers values
func NewQueryTestExecutionsBadRequest() *QueryTestExecutionsBadRequest {
	return &QueryTestExecutionsBadRequest{}
}

/*
QueryTestExecutionsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type QueryTestExecutionsBadRequest struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this query test executions bad request response has a 2xx status code
func (o *QueryTestExecutionsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this query test executions bad request response has a 3xx status code
func (o *QueryTestExecutionsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this query test executions bad request response has a 4xx status code
func (o *QueryTestExecutionsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this query test executions bad request response has a 5xx status code
func (o *QueryTestExecutionsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this query test executions bad request response a status code equal to that given
func (o *QueryTestExecutionsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the query test executions bad request response
func (o *QueryTestExecutionsBadRequest) Code() int {
	return 400
}

func (o *QueryTestExecutionsBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /orgs/{orgName}/tests/executions/][%d] queryTestExecutionsBadRequest %s", 400, payload)
}

func (o *QueryTestExecutionsBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /orgs/{orgName}/tests/executions/][%d] queryTestExecutionsBadRequest %s", 400, payload)
}

func (o *QueryTestExecutionsBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *QueryTestExecutionsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewQueryTestExecutionsUnauthorized creates a QueryTestExecutionsUnauthorized with default headers values
func NewQueryTestExecutionsUnauthorized() *QueryTestExecutionsUnauthorized {
	return &QueryTestExecutionsUnauthorized{}
}

/*
QueryTestExecutionsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type QueryTestExecutionsUnauthorized struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this query test executions unauthorized response has a 2xx status code
func (o *QueryTestExecutionsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this query test executions unauthorized response has a 3xx status code
func (o *QueryTestExecutionsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this query test executions unauthorized response has a 4xx status code
func (o *QueryTestExecutionsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this query test executions unauthorized response has a 5xx status code
func (o *QueryTestExecutionsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this query test executions unauthorized response a status code equal to that given
func (o *QueryTestExecutionsUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the query test executions unauthorized response
func (o *QueryTestExecutionsUnauthorized) Code() int {
	return 401
}

func (o *QueryTestExecutionsUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /orgs/{orgName}/tests/executions/][%d] queryTestExecutionsUnauthorized %s", 401, payload)
}

func (o *QueryTestExecutionsUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /orgs/{orgName}/tests/executions/][%d] queryTestExecutionsUnauthorized %s", 401, payload)
}

func (o *QueryTestExecutionsUnauthorized) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *QueryTestExecutionsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewQueryTestExecutionsBadGateway creates a QueryTestExecutionsBadGateway with default headers values
func NewQueryTestExecutionsBadGateway() *QueryTestExecutionsBadGateway {
	return &QueryTestExecutionsBadGateway{}
}

/*
QueryTestExecutionsBadGateway describes a response with status code 502, with default header values.

Bad Gateway
*/
type QueryTestExecutionsBadGateway struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this query test executions bad gateway response has a 2xx status code
func (o *QueryTestExecutionsBadGateway) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this query test executions bad gateway response has a 3xx status code
func (o *QueryTestExecutionsBadGateway) IsRedirect() bool {
	return false
}

// IsClientError returns true when this query test executions bad gateway response has a 4xx status code
func (o *QueryTestExecutionsBadGateway) IsClientError() bool {
	return false
}

// IsServerError returns true when this query test executions bad gateway response has a 5xx status code
func (o *QueryTestExecutionsBadGateway) IsServerError() bool {
	return true
}

// IsCode returns true when this query test executions bad gateway response a status code equal to that given
func (o *QueryTestExecutionsBadGateway) IsCode(code int) bool {
	return code == 502
}

// Code gets the status code for the query test executions bad gateway response
func (o *QueryTestExecutionsBadGateway) Code() int {
	return 502
}

func (o *QueryTestExecutionsBadGateway) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /orgs/{orgName}/tests/executions/][%d] queryTestExecutionsBadGateway %s", 502, payload)
}

func (o *QueryTestExecutionsBadGateway) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /orgs/{orgName}/tests/executions/][%d] queryTestExecutionsBadGateway %s", 502, payload)
}

func (o *QueryTestExecutionsBadGateway) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *QueryTestExecutionsBadGateway) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
