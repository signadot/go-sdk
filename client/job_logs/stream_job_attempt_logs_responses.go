// Code generated by go-swagger; DO NOT EDIT.

package job_logs

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/signadot/go-sdk/models"
)

// StreamJobAttemptLogsReader is a Reader for the StreamJobAttemptLogs structure.
type StreamJobAttemptLogsReader struct {
	formats strfmt.Registry
	writer  io.Writer
}

// ReadResponse reads a server response into the received o.
func (o *StreamJobAttemptLogsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewStreamJobAttemptLogsOK(o.writer)
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewStreamJobAttemptLogsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewStreamJobAttemptLogsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewStreamJobAttemptLogsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /orgs/{orgName}/jobs/{jobName}/attempts/{jobAttempt}/logs/stream] stream-job-attempt-logs", response, response.Code())
	}
}

// NewStreamJobAttemptLogsOK creates a StreamJobAttemptLogsOK with default headers values
func NewStreamJobAttemptLogsOK(writer io.Writer) *StreamJobAttemptLogsOK {
	return &StreamJobAttemptLogsOK{

		Payload: writer,
	}
}

/*
StreamJobAttemptLogsOK describes a response with status code 200, with default header values.

Log lines stream
*/
type StreamJobAttemptLogsOK struct {
	Payload io.Writer
}

// IsSuccess returns true when this stream job attempt logs o k response has a 2xx status code
func (o *StreamJobAttemptLogsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this stream job attempt logs o k response has a 3xx status code
func (o *StreamJobAttemptLogsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this stream job attempt logs o k response has a 4xx status code
func (o *StreamJobAttemptLogsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this stream job attempt logs o k response has a 5xx status code
func (o *StreamJobAttemptLogsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this stream job attempt logs o k response a status code equal to that given
func (o *StreamJobAttemptLogsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the stream job attempt logs o k response
func (o *StreamJobAttemptLogsOK) Code() int {
	return 200
}

func (o *StreamJobAttemptLogsOK) Error() string {
	return fmt.Sprintf("[GET /orgs/{orgName}/jobs/{jobName}/attempts/{jobAttempt}/logs/stream][%d] streamJobAttemptLogsOK", 200)
}

func (o *StreamJobAttemptLogsOK) String() string {
	return fmt.Sprintf("[GET /orgs/{orgName}/jobs/{jobName}/attempts/{jobAttempt}/logs/stream][%d] streamJobAttemptLogsOK", 200)
}

func (o *StreamJobAttemptLogsOK) GetPayload() io.Writer {
	return o.Payload
}

func (o *StreamJobAttemptLogsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStreamJobAttemptLogsBadRequest creates a StreamJobAttemptLogsBadRequest with default headers values
func NewStreamJobAttemptLogsBadRequest() *StreamJobAttemptLogsBadRequest {
	return &StreamJobAttemptLogsBadRequest{}
}

/*
StreamJobAttemptLogsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type StreamJobAttemptLogsBadRequest struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this stream job attempt logs bad request response has a 2xx status code
func (o *StreamJobAttemptLogsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this stream job attempt logs bad request response has a 3xx status code
func (o *StreamJobAttemptLogsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this stream job attempt logs bad request response has a 4xx status code
func (o *StreamJobAttemptLogsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this stream job attempt logs bad request response has a 5xx status code
func (o *StreamJobAttemptLogsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this stream job attempt logs bad request response a status code equal to that given
func (o *StreamJobAttemptLogsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the stream job attempt logs bad request response
func (o *StreamJobAttemptLogsBadRequest) Code() int {
	return 400
}

func (o *StreamJobAttemptLogsBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /orgs/{orgName}/jobs/{jobName}/attempts/{jobAttempt}/logs/stream][%d] streamJobAttemptLogsBadRequest %s", 400, payload)
}

func (o *StreamJobAttemptLogsBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /orgs/{orgName}/jobs/{jobName}/attempts/{jobAttempt}/logs/stream][%d] streamJobAttemptLogsBadRequest %s", 400, payload)
}

func (o *StreamJobAttemptLogsBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *StreamJobAttemptLogsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStreamJobAttemptLogsUnauthorized creates a StreamJobAttemptLogsUnauthorized with default headers values
func NewStreamJobAttemptLogsUnauthorized() *StreamJobAttemptLogsUnauthorized {
	return &StreamJobAttemptLogsUnauthorized{}
}

/*
StreamJobAttemptLogsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type StreamJobAttemptLogsUnauthorized struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this stream job attempt logs unauthorized response has a 2xx status code
func (o *StreamJobAttemptLogsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this stream job attempt logs unauthorized response has a 3xx status code
func (o *StreamJobAttemptLogsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this stream job attempt logs unauthorized response has a 4xx status code
func (o *StreamJobAttemptLogsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this stream job attempt logs unauthorized response has a 5xx status code
func (o *StreamJobAttemptLogsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this stream job attempt logs unauthorized response a status code equal to that given
func (o *StreamJobAttemptLogsUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the stream job attempt logs unauthorized response
func (o *StreamJobAttemptLogsUnauthorized) Code() int {
	return 401
}

func (o *StreamJobAttemptLogsUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /orgs/{orgName}/jobs/{jobName}/attempts/{jobAttempt}/logs/stream][%d] streamJobAttemptLogsUnauthorized %s", 401, payload)
}

func (o *StreamJobAttemptLogsUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /orgs/{orgName}/jobs/{jobName}/attempts/{jobAttempt}/logs/stream][%d] streamJobAttemptLogsUnauthorized %s", 401, payload)
}

func (o *StreamJobAttemptLogsUnauthorized) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *StreamJobAttemptLogsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStreamJobAttemptLogsNotFound creates a StreamJobAttemptLogsNotFound with default headers values
func NewStreamJobAttemptLogsNotFound() *StreamJobAttemptLogsNotFound {
	return &StreamJobAttemptLogsNotFound{}
}

/*
StreamJobAttemptLogsNotFound describes a response with status code 404, with default header values.

Not Found
*/
type StreamJobAttemptLogsNotFound struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this stream job attempt logs not found response has a 2xx status code
func (o *StreamJobAttemptLogsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this stream job attempt logs not found response has a 3xx status code
func (o *StreamJobAttemptLogsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this stream job attempt logs not found response has a 4xx status code
func (o *StreamJobAttemptLogsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this stream job attempt logs not found response has a 5xx status code
func (o *StreamJobAttemptLogsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this stream job attempt logs not found response a status code equal to that given
func (o *StreamJobAttemptLogsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the stream job attempt logs not found response
func (o *StreamJobAttemptLogsNotFound) Code() int {
	return 404
}

func (o *StreamJobAttemptLogsNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /orgs/{orgName}/jobs/{jobName}/attempts/{jobAttempt}/logs/stream][%d] streamJobAttemptLogsNotFound %s", 404, payload)
}

func (o *StreamJobAttemptLogsNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /orgs/{orgName}/jobs/{jobName}/attempts/{jobAttempt}/logs/stream][%d] streamJobAttemptLogsNotFound %s", 404, payload)
}

func (o *StreamJobAttemptLogsNotFound) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *StreamJobAttemptLogsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
