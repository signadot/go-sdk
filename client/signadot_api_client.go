// Code generated by go-swagger; DO NOT EDIT.

package client

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/runtime"
	httptransport "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/signadot/go-sdk/client/artifacts"
	"github.com/signadot/go-sdk/client/assistants"
	"github.com/signadot/go-sdk/client/auth"
	"github.com/signadot/go-sdk/client/cluster"
	"github.com/signadot/go-sdk/client/job_logs"
	"github.com/signadot/go-sdk/client/jobs"
	"github.com/signadot/go-sdk/client/orgs"
	"github.com/signadot/go-sdk/client/resource_plugins"
	"github.com/signadot/go-sdk/client/route_groups"
	"github.com/signadot/go-sdk/client/runner_groups"
	"github.com/signadot/go-sdk/client/sandboxes"
	"github.com/signadot/go-sdk/client/test_executions"
	"github.com/signadot/go-sdk/client/tests"
)

// Default signadot API HTTP client.
var Default = NewHTTPClient(nil)

const (
	// DefaultHost is the default Host
	// found in Meta (info) section of spec file
	DefaultHost string = "api.signadot.com"
	// DefaultBasePath is the default BasePath
	// found in Meta (info) section of spec file
	DefaultBasePath string = "/api/v2"
)

// DefaultSchemes are the default schemes found in Meta (info) section of spec file
var DefaultSchemes = []string{"https"}

// NewHTTPClient creates a new signadot API HTTP client.
func NewHTTPClient(formats strfmt.Registry) *SignadotAPI {
	return NewHTTPClientWithConfig(formats, nil)
}

// NewHTTPClientWithConfig creates a new signadot API HTTP client,
// using a customizable transport config.
func NewHTTPClientWithConfig(formats strfmt.Registry, cfg *TransportConfig) *SignadotAPI {
	// ensure nullable parameters have default
	if cfg == nil {
		cfg = DefaultTransportConfig()
	}

	// create transport and client
	transport := httptransport.New(cfg.Host, cfg.BasePath, cfg.Schemes)
	return New(transport, formats)
}

// New creates a new signadot API client
func New(transport runtime.ClientTransport, formats strfmt.Registry) *SignadotAPI {
	// ensure nullable parameters have default
	if formats == nil {
		formats = strfmt.Default
	}

	cli := new(SignadotAPI)
	cli.Transport = transport
	cli.Artifacts = artifacts.New(transport, formats)
	cli.Assistants = assistants.New(transport, formats)
	cli.Auth = auth.New(transport, formats)
	cli.Cluster = cluster.New(transport, formats)
	cli.JobLogs = job_logs.New(transport, formats)
	cli.Jobs = jobs.New(transport, formats)
	cli.Orgs = orgs.New(transport, formats)
	cli.ResourcePlugins = resource_plugins.New(transport, formats)
	cli.RouteGroups = route_groups.New(transport, formats)
	cli.RunnerGroups = runner_groups.New(transport, formats)
	cli.Sandboxes = sandboxes.New(transport, formats)
	cli.TestExecutions = test_executions.New(transport, formats)
	cli.Tests = tests.New(transport, formats)
	return cli
}

// DefaultTransportConfig creates a TransportConfig with the
// default settings taken from the meta section of the spec file.
func DefaultTransportConfig() *TransportConfig {
	return &TransportConfig{
		Host:     DefaultHost,
		BasePath: DefaultBasePath,
		Schemes:  DefaultSchemes,
	}
}

// TransportConfig contains the transport related info,
// found in the meta section of the spec file.
type TransportConfig struct {
	Host     string
	BasePath string
	Schemes  []string
}

// WithHost overrides the default host,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithHost(host string) *TransportConfig {
	cfg.Host = host
	return cfg
}

// WithBasePath overrides the default basePath,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithBasePath(basePath string) *TransportConfig {
	cfg.BasePath = basePath
	return cfg
}

// WithSchemes overrides the default schemes,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithSchemes(schemes []string) *TransportConfig {
	cfg.Schemes = schemes
	return cfg
}

// SignadotAPI is a client for signadot API
type SignadotAPI struct {
	Artifacts artifacts.ClientService

	Assistants assistants.ClientService

	Auth auth.ClientService

	Cluster cluster.ClientService

	JobLogs job_logs.ClientService

	Jobs jobs.ClientService

	Orgs orgs.ClientService

	ResourcePlugins resource_plugins.ClientService

	RouteGroups route_groups.ClientService

	RunnerGroups runner_groups.ClientService

	Sandboxes sandboxes.ClientService

	TestExecutions test_executions.ClientService

	Tests tests.ClientService

	Transport runtime.ClientTransport
}

// SetTransport changes the transport on the client and all its subresources
func (c *SignadotAPI) SetTransport(transport runtime.ClientTransport) {
	c.Transport = transport
	c.Artifacts.SetTransport(transport)
	c.Assistants.SetTransport(transport)
	c.Auth.SetTransport(transport)
	c.Cluster.SetTransport(transport)
	c.JobLogs.SetTransport(transport)
	c.Jobs.SetTransport(transport)
	c.Orgs.SetTransport(transport)
	c.ResourcePlugins.SetTransport(transport)
	c.RouteGroups.SetTransport(transport)
	c.RunnerGroups.SetTransport(transport)
	c.Sandboxes.SetTransport(transport)
	c.TestExecutions.SetTransport(transport)
	c.Tests.SetTransport(transport)
}
