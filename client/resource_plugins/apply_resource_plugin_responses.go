// Code generated by go-swagger; DO NOT EDIT.

package resource_plugins

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/signadot/go-sdk/models"
)

// ApplyResourcePluginReader is a Reader for the ApplyResourcePlugin structure.
type ApplyResourcePluginReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ApplyResourcePluginReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewApplyResourcePluginOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewApplyResourcePluginBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewApplyResourcePluginUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 502:
		result := NewApplyResourcePluginBadGateway()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewApplyResourcePluginOK creates a ApplyResourcePluginOK with default headers values
func NewApplyResourcePluginOK() *ApplyResourcePluginOK {
	return &ApplyResourcePluginOK{}
}

/*
ApplyResourcePluginOK describes a response with status code 200, with default header values.

OK
*/
type ApplyResourcePluginOK struct {
	Payload models.EmptyResponse
}

// IsSuccess returns true when this apply resource plugin o k response has a 2xx status code
func (o *ApplyResourcePluginOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this apply resource plugin o k response has a 3xx status code
func (o *ApplyResourcePluginOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this apply resource plugin o k response has a 4xx status code
func (o *ApplyResourcePluginOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this apply resource plugin o k response has a 5xx status code
func (o *ApplyResourcePluginOK) IsServerError() bool {
	return false
}

// IsCode returns true when this apply resource plugin o k response a status code equal to that given
func (o *ApplyResourcePluginOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the apply resource plugin o k response
func (o *ApplyResourcePluginOK) Code() int {
	return 200
}

func (o *ApplyResourcePluginOK) Error() string {
	return fmt.Sprintf("[PUT /orgs/{orgName}/resource-plugins/{pluginName}][%d] applyResourcePluginOK  %+v", 200, o.Payload)
}

func (o *ApplyResourcePluginOK) String() string {
	return fmt.Sprintf("[PUT /orgs/{orgName}/resource-plugins/{pluginName}][%d] applyResourcePluginOK  %+v", 200, o.Payload)
}

func (o *ApplyResourcePluginOK) GetPayload() models.EmptyResponse {
	return o.Payload
}

func (o *ApplyResourcePluginOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewApplyResourcePluginBadRequest creates a ApplyResourcePluginBadRequest with default headers values
func NewApplyResourcePluginBadRequest() *ApplyResourcePluginBadRequest {
	return &ApplyResourcePluginBadRequest{}
}

/*
ApplyResourcePluginBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type ApplyResourcePluginBadRequest struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this apply resource plugin bad request response has a 2xx status code
func (o *ApplyResourcePluginBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this apply resource plugin bad request response has a 3xx status code
func (o *ApplyResourcePluginBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this apply resource plugin bad request response has a 4xx status code
func (o *ApplyResourcePluginBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this apply resource plugin bad request response has a 5xx status code
func (o *ApplyResourcePluginBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this apply resource plugin bad request response a status code equal to that given
func (o *ApplyResourcePluginBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the apply resource plugin bad request response
func (o *ApplyResourcePluginBadRequest) Code() int {
	return 400
}

func (o *ApplyResourcePluginBadRequest) Error() string {
	return fmt.Sprintf("[PUT /orgs/{orgName}/resource-plugins/{pluginName}][%d] applyResourcePluginBadRequest  %+v", 400, o.Payload)
}

func (o *ApplyResourcePluginBadRequest) String() string {
	return fmt.Sprintf("[PUT /orgs/{orgName}/resource-plugins/{pluginName}][%d] applyResourcePluginBadRequest  %+v", 400, o.Payload)
}

func (o *ApplyResourcePluginBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *ApplyResourcePluginBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewApplyResourcePluginUnauthorized creates a ApplyResourcePluginUnauthorized with default headers values
func NewApplyResourcePluginUnauthorized() *ApplyResourcePluginUnauthorized {
	return &ApplyResourcePluginUnauthorized{}
}

/*
ApplyResourcePluginUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type ApplyResourcePluginUnauthorized struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this apply resource plugin unauthorized response has a 2xx status code
func (o *ApplyResourcePluginUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this apply resource plugin unauthorized response has a 3xx status code
func (o *ApplyResourcePluginUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this apply resource plugin unauthorized response has a 4xx status code
func (o *ApplyResourcePluginUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this apply resource plugin unauthorized response has a 5xx status code
func (o *ApplyResourcePluginUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this apply resource plugin unauthorized response a status code equal to that given
func (o *ApplyResourcePluginUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the apply resource plugin unauthorized response
func (o *ApplyResourcePluginUnauthorized) Code() int {
	return 401
}

func (o *ApplyResourcePluginUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /orgs/{orgName}/resource-plugins/{pluginName}][%d] applyResourcePluginUnauthorized  %+v", 401, o.Payload)
}

func (o *ApplyResourcePluginUnauthorized) String() string {
	return fmt.Sprintf("[PUT /orgs/{orgName}/resource-plugins/{pluginName}][%d] applyResourcePluginUnauthorized  %+v", 401, o.Payload)
}

func (o *ApplyResourcePluginUnauthorized) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *ApplyResourcePluginUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewApplyResourcePluginBadGateway creates a ApplyResourcePluginBadGateway with default headers values
func NewApplyResourcePluginBadGateway() *ApplyResourcePluginBadGateway {
	return &ApplyResourcePluginBadGateway{}
}

/*
ApplyResourcePluginBadGateway describes a response with status code 502, with default header values.

Bad Gateway
*/
type ApplyResourcePluginBadGateway struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this apply resource plugin bad gateway response has a 2xx status code
func (o *ApplyResourcePluginBadGateway) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this apply resource plugin bad gateway response has a 3xx status code
func (o *ApplyResourcePluginBadGateway) IsRedirect() bool {
	return false
}

// IsClientError returns true when this apply resource plugin bad gateway response has a 4xx status code
func (o *ApplyResourcePluginBadGateway) IsClientError() bool {
	return false
}

// IsServerError returns true when this apply resource plugin bad gateway response has a 5xx status code
func (o *ApplyResourcePluginBadGateway) IsServerError() bool {
	return true
}

// IsCode returns true when this apply resource plugin bad gateway response a status code equal to that given
func (o *ApplyResourcePluginBadGateway) IsCode(code int) bool {
	return code == 502
}

// Code gets the status code for the apply resource plugin bad gateway response
func (o *ApplyResourcePluginBadGateway) Code() int {
	return 502
}

func (o *ApplyResourcePluginBadGateway) Error() string {
	return fmt.Sprintf("[PUT /orgs/{orgName}/resource-plugins/{pluginName}][%d] applyResourcePluginBadGateway  %+v", 502, o.Payload)
}

func (o *ApplyResourcePluginBadGateway) String() string {
	return fmt.Sprintf("[PUT /orgs/{orgName}/resource-plugins/{pluginName}][%d] applyResourcePluginBadGateway  %+v", 502, o.Payload)
}

func (o *ApplyResourcePluginBadGateway) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *ApplyResourcePluginBadGateway) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
