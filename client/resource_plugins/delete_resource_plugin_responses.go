// Code generated by go-swagger; DO NOT EDIT.

package resource_plugins

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/signadot/go-sdk/models"
)

// DeleteResourcePluginReader is a Reader for the DeleteResourcePlugin structure.
type DeleteResourcePluginReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteResourcePluginReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteResourcePluginOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteResourcePluginBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteResourcePluginUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 502:
		result := NewDeleteResourcePluginBadGateway()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteResourcePluginOK creates a DeleteResourcePluginOK with default headers values
func NewDeleteResourcePluginOK() *DeleteResourcePluginOK {
	return &DeleteResourcePluginOK{}
}

/*
DeleteResourcePluginOK describes a response with status code 200, with default header values.

OK
*/
type DeleteResourcePluginOK struct {
	Payload models.EmptyResponse
}

// IsSuccess returns true when this delete resource plugin o k response has a 2xx status code
func (o *DeleteResourcePluginOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete resource plugin o k response has a 3xx status code
func (o *DeleteResourcePluginOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete resource plugin o k response has a 4xx status code
func (o *DeleteResourcePluginOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete resource plugin o k response has a 5xx status code
func (o *DeleteResourcePluginOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete resource plugin o k response a status code equal to that given
func (o *DeleteResourcePluginOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the delete resource plugin o k response
func (o *DeleteResourcePluginOK) Code() int {
	return 200
}

func (o *DeleteResourcePluginOK) Error() string {
	return fmt.Sprintf("[DELETE /orgs/{orgName}/resource-plugins/{pluginName}][%d] deleteResourcePluginOK  %+v", 200, o.Payload)
}

func (o *DeleteResourcePluginOK) String() string {
	return fmt.Sprintf("[DELETE /orgs/{orgName}/resource-plugins/{pluginName}][%d] deleteResourcePluginOK  %+v", 200, o.Payload)
}

func (o *DeleteResourcePluginOK) GetPayload() models.EmptyResponse {
	return o.Payload
}

func (o *DeleteResourcePluginOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteResourcePluginBadRequest creates a DeleteResourcePluginBadRequest with default headers values
func NewDeleteResourcePluginBadRequest() *DeleteResourcePluginBadRequest {
	return &DeleteResourcePluginBadRequest{}
}

/*
DeleteResourcePluginBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type DeleteResourcePluginBadRequest struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this delete resource plugin bad request response has a 2xx status code
func (o *DeleteResourcePluginBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete resource plugin bad request response has a 3xx status code
func (o *DeleteResourcePluginBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete resource plugin bad request response has a 4xx status code
func (o *DeleteResourcePluginBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete resource plugin bad request response has a 5xx status code
func (o *DeleteResourcePluginBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete resource plugin bad request response a status code equal to that given
func (o *DeleteResourcePluginBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the delete resource plugin bad request response
func (o *DeleteResourcePluginBadRequest) Code() int {
	return 400
}

func (o *DeleteResourcePluginBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /orgs/{orgName}/resource-plugins/{pluginName}][%d] deleteResourcePluginBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteResourcePluginBadRequest) String() string {
	return fmt.Sprintf("[DELETE /orgs/{orgName}/resource-plugins/{pluginName}][%d] deleteResourcePluginBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteResourcePluginBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *DeleteResourcePluginBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteResourcePluginUnauthorized creates a DeleteResourcePluginUnauthorized with default headers values
func NewDeleteResourcePluginUnauthorized() *DeleteResourcePluginUnauthorized {
	return &DeleteResourcePluginUnauthorized{}
}

/*
DeleteResourcePluginUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type DeleteResourcePluginUnauthorized struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this delete resource plugin unauthorized response has a 2xx status code
func (o *DeleteResourcePluginUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete resource plugin unauthorized response has a 3xx status code
func (o *DeleteResourcePluginUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete resource plugin unauthorized response has a 4xx status code
func (o *DeleteResourcePluginUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete resource plugin unauthorized response has a 5xx status code
func (o *DeleteResourcePluginUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this delete resource plugin unauthorized response a status code equal to that given
func (o *DeleteResourcePluginUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the delete resource plugin unauthorized response
func (o *DeleteResourcePluginUnauthorized) Code() int {
	return 401
}

func (o *DeleteResourcePluginUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /orgs/{orgName}/resource-plugins/{pluginName}][%d] deleteResourcePluginUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteResourcePluginUnauthorized) String() string {
	return fmt.Sprintf("[DELETE /orgs/{orgName}/resource-plugins/{pluginName}][%d] deleteResourcePluginUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteResourcePluginUnauthorized) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *DeleteResourcePluginUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteResourcePluginBadGateway creates a DeleteResourcePluginBadGateway with default headers values
func NewDeleteResourcePluginBadGateway() *DeleteResourcePluginBadGateway {
	return &DeleteResourcePluginBadGateway{}
}

/*
DeleteResourcePluginBadGateway describes a response with status code 502, with default header values.

Bad Gateway
*/
type DeleteResourcePluginBadGateway struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this delete resource plugin bad gateway response has a 2xx status code
func (o *DeleteResourcePluginBadGateway) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete resource plugin bad gateway response has a 3xx status code
func (o *DeleteResourcePluginBadGateway) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete resource plugin bad gateway response has a 4xx status code
func (o *DeleteResourcePluginBadGateway) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete resource plugin bad gateway response has a 5xx status code
func (o *DeleteResourcePluginBadGateway) IsServerError() bool {
	return true
}

// IsCode returns true when this delete resource plugin bad gateway response a status code equal to that given
func (o *DeleteResourcePluginBadGateway) IsCode(code int) bool {
	return code == 502
}

// Code gets the status code for the delete resource plugin bad gateway response
func (o *DeleteResourcePluginBadGateway) Code() int {
	return 502
}

func (o *DeleteResourcePluginBadGateway) Error() string {
	return fmt.Sprintf("[DELETE /orgs/{orgName}/resource-plugins/{pluginName}][%d] deleteResourcePluginBadGateway  %+v", 502, o.Payload)
}

func (o *DeleteResourcePluginBadGateway) String() string {
	return fmt.Sprintf("[DELETE /orgs/{orgName}/resource-plugins/{pluginName}][%d] deleteResourcePluginBadGateway  %+v", 502, o.Payload)
}

func (o *DeleteResourcePluginBadGateway) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *DeleteResourcePluginBadGateway) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
