// Code generated by go-swagger; DO NOT EDIT.

package sandboxes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/signadot/go-sdk/models"
)

// PutSandboxReader is a Reader for the PutSandbox structure.
type PutSandboxReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutSandboxReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPutSandboxOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutSandboxBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPutSandboxUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 502:
		result := NewPutSandboxBadGateway()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPutSandboxOK creates a PutSandboxOK with default headers values
func NewPutSandboxOK() *PutSandboxOK {
	return &PutSandboxOK{}
}

/* PutSandboxOK describes a response with status code 200, with default header values.

OK
*/
type PutSandboxOK struct {
	Payload *models.SandboxByNamePutResult
}

func (o *PutSandboxOK) Error() string {
	return fmt.Sprintf("[PUT /orgs/{orgName}/sandboxes/{sandboxName}][%d] putSandboxOK  %+v", 200, o.Payload)
}
func (o *PutSandboxOK) GetPayload() *models.SandboxByNamePutResult {
	return o.Payload
}

func (o *PutSandboxOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SandboxByNamePutResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutSandboxBadRequest creates a PutSandboxBadRequest with default headers values
func NewPutSandboxBadRequest() *PutSandboxBadRequest {
	return &PutSandboxBadRequest{}
}

/* PutSandboxBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PutSandboxBadRequest struct {
	Payload *models.ApierrsResponse
}

func (o *PutSandboxBadRequest) Error() string {
	return fmt.Sprintf("[PUT /orgs/{orgName}/sandboxes/{sandboxName}][%d] putSandboxBadRequest  %+v", 400, o.Payload)
}
func (o *PutSandboxBadRequest) GetPayload() *models.ApierrsResponse {
	return o.Payload
}

func (o *PutSandboxBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ApierrsResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutSandboxUnauthorized creates a PutSandboxUnauthorized with default headers values
func NewPutSandboxUnauthorized() *PutSandboxUnauthorized {
	return &PutSandboxUnauthorized{}
}

/* PutSandboxUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type PutSandboxUnauthorized struct {
	Payload *models.ApierrsResponse
}

func (o *PutSandboxUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /orgs/{orgName}/sandboxes/{sandboxName}][%d] putSandboxUnauthorized  %+v", 401, o.Payload)
}
func (o *PutSandboxUnauthorized) GetPayload() *models.ApierrsResponse {
	return o.Payload
}

func (o *PutSandboxUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ApierrsResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutSandboxBadGateway creates a PutSandboxBadGateway with default headers values
func NewPutSandboxBadGateway() *PutSandboxBadGateway {
	return &PutSandboxBadGateway{}
}

/* PutSandboxBadGateway describes a response with status code 502, with default header values.

Bad Gateway
*/
type PutSandboxBadGateway struct {
	Payload *models.ApierrsResponse
}

func (o *PutSandboxBadGateway) Error() string {
	return fmt.Sprintf("[PUT /orgs/{orgName}/sandboxes/{sandboxName}][%d] putSandboxBadGateway  %+v", 502, o.Payload)
}
func (o *PutSandboxBadGateway) GetPayload() *models.ApierrsResponse {
	return o.Payload
}

func (o *PutSandboxBadGateway) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ApierrsResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
