// Code generated by go-swagger; DO NOT EDIT.

package sandboxes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/signadot/go-sdk/models"
)

// GetSandboxStatusByIDReader is a Reader for the GetSandboxStatusByID structure.
type GetSandboxStatusByIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSandboxStatusByIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetSandboxStatusByIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetSandboxStatusByIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetSandboxStatusByIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 502:
		result := NewGetSandboxStatusByIDBadGateway()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetSandboxStatusByIDOK creates a GetSandboxStatusByIDOK with default headers values
func NewGetSandboxStatusByIDOK() *GetSandboxStatusByIDOK {
	return &GetSandboxStatusByIDOK{}
}

/* GetSandboxStatusByIDOK describes a response with status code 200, with default header values.

OK
*/
type GetSandboxStatusByIDOK struct {
	Payload *models.SandboxStatusResponse
}

func (o *GetSandboxStatusByIDOK) Error() string {
	return fmt.Sprintf("[GET /orgs/{orgName}/sandboxes/{sandboxID}/status][%d] getSandboxStatusByIdOK  %+v", 200, o.Payload)
}
func (o *GetSandboxStatusByIDOK) GetPayload() *models.SandboxStatusResponse {
	return o.Payload
}

func (o *GetSandboxStatusByIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SandboxStatusResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSandboxStatusByIDBadRequest creates a GetSandboxStatusByIDBadRequest with default headers values
func NewGetSandboxStatusByIDBadRequest() *GetSandboxStatusByIDBadRequest {
	return &GetSandboxStatusByIDBadRequest{}
}

/* GetSandboxStatusByIDBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetSandboxStatusByIDBadRequest struct {
	Payload *models.ApierrsResponse
}

func (o *GetSandboxStatusByIDBadRequest) Error() string {
	return fmt.Sprintf("[GET /orgs/{orgName}/sandboxes/{sandboxID}/status][%d] getSandboxStatusByIdBadRequest  %+v", 400, o.Payload)
}
func (o *GetSandboxStatusByIDBadRequest) GetPayload() *models.ApierrsResponse {
	return o.Payload
}

func (o *GetSandboxStatusByIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ApierrsResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSandboxStatusByIDUnauthorized creates a GetSandboxStatusByIDUnauthorized with default headers values
func NewGetSandboxStatusByIDUnauthorized() *GetSandboxStatusByIDUnauthorized {
	return &GetSandboxStatusByIDUnauthorized{}
}

/* GetSandboxStatusByIDUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetSandboxStatusByIDUnauthorized struct {
	Payload *models.ApierrsResponse
}

func (o *GetSandboxStatusByIDUnauthorized) Error() string {
	return fmt.Sprintf("[GET /orgs/{orgName}/sandboxes/{sandboxID}/status][%d] getSandboxStatusByIdUnauthorized  %+v", 401, o.Payload)
}
func (o *GetSandboxStatusByIDUnauthorized) GetPayload() *models.ApierrsResponse {
	return o.Payload
}

func (o *GetSandboxStatusByIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ApierrsResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSandboxStatusByIDBadGateway creates a GetSandboxStatusByIDBadGateway with default headers values
func NewGetSandboxStatusByIDBadGateway() *GetSandboxStatusByIDBadGateway {
	return &GetSandboxStatusByIDBadGateway{}
}

/* GetSandboxStatusByIDBadGateway describes a response with status code 502, with default header values.

Bad Gateway
*/
type GetSandboxStatusByIDBadGateway struct {
	Payload *models.ApierrsResponse
}

func (o *GetSandboxStatusByIDBadGateway) Error() string {
	return fmt.Sprintf("[GET /orgs/{orgName}/sandboxes/{sandboxID}/status][%d] getSandboxStatusByIdBadGateway  %+v", 502, o.Payload)
}
func (o *GetSandboxStatusByIDBadGateway) GetPayload() *models.ApierrsResponse {
	return o.Payload
}

func (o *GetSandboxStatusByIDBadGateway) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ApierrsResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
