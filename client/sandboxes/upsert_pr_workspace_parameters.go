// Code generated by go-swagger; DO NOT EDIT.

package sandboxes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/signadot/go-sdk/models"
)

// NewUpsertPrWorkspaceParams creates a new UpsertPrWorkspaceParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewUpsertPrWorkspaceParams() *UpsertPrWorkspaceParams {
	return &UpsertPrWorkspaceParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewUpsertPrWorkspaceParamsWithTimeout creates a new UpsertPrWorkspaceParams object
// with the ability to set a timeout on a request.
func NewUpsertPrWorkspaceParamsWithTimeout(timeout time.Duration) *UpsertPrWorkspaceParams {
	return &UpsertPrWorkspaceParams{
		timeout: timeout,
	}
}

// NewUpsertPrWorkspaceParamsWithContext creates a new UpsertPrWorkspaceParams object
// with the ability to set a context for a request.
func NewUpsertPrWorkspaceParamsWithContext(ctx context.Context) *UpsertPrWorkspaceParams {
	return &UpsertPrWorkspaceParams{
		Context: ctx,
	}
}

// NewUpsertPrWorkspaceParamsWithHTTPClient creates a new UpsertPrWorkspaceParams object
// with the ability to set a custom HTTPClient for a request.
func NewUpsertPrWorkspaceParamsWithHTTPClient(client *http.Client) *UpsertPrWorkspaceParams {
	return &UpsertPrWorkspaceParams{
		HTTPClient: client,
	}
}

/* UpsertPrWorkspaceParams contains all the parameters to send to the API endpoint
   for the upsert pr workspace operation.

   Typically these are written to a http.Request.
*/
type UpsertPrWorkspaceParams struct {

	/* Data.

	   Request to upsert workspace
	*/
	Data *models.UpsertPRWorkspacesRequest

	/* GithubOrg.

	   GitHub Org Name
	*/
	GithubOrg string

	/* GithubRepo.

	   GitHub Repository Name
	*/
	GithubRepo string

	/* PrNumber.

	   Pull Request Number
	*/
	PrNumber int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the upsert pr workspace params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *UpsertPrWorkspaceParams) WithDefaults() *UpsertPrWorkspaceParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the upsert pr workspace params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *UpsertPrWorkspaceParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the upsert pr workspace params
func (o *UpsertPrWorkspaceParams) WithTimeout(timeout time.Duration) *UpsertPrWorkspaceParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the upsert pr workspace params
func (o *UpsertPrWorkspaceParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the upsert pr workspace params
func (o *UpsertPrWorkspaceParams) WithContext(ctx context.Context) *UpsertPrWorkspaceParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the upsert pr workspace params
func (o *UpsertPrWorkspaceParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the upsert pr workspace params
func (o *UpsertPrWorkspaceParams) WithHTTPClient(client *http.Client) *UpsertPrWorkspaceParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the upsert pr workspace params
func (o *UpsertPrWorkspaceParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithData adds the data to the upsert pr workspace params
func (o *UpsertPrWorkspaceParams) WithData(data *models.UpsertPRWorkspacesRequest) *UpsertPrWorkspaceParams {
	o.SetData(data)
	return o
}

// SetData adds the data to the upsert pr workspace params
func (o *UpsertPrWorkspaceParams) SetData(data *models.UpsertPRWorkspacesRequest) {
	o.Data = data
}

// WithGithubOrg adds the githubOrg to the upsert pr workspace params
func (o *UpsertPrWorkspaceParams) WithGithubOrg(githubOrg string) *UpsertPrWorkspaceParams {
	o.SetGithubOrg(githubOrg)
	return o
}

// SetGithubOrg adds the githubOrg to the upsert pr workspace params
func (o *UpsertPrWorkspaceParams) SetGithubOrg(githubOrg string) {
	o.GithubOrg = githubOrg
}

// WithGithubRepo adds the githubRepo to the upsert pr workspace params
func (o *UpsertPrWorkspaceParams) WithGithubRepo(githubRepo string) *UpsertPrWorkspaceParams {
	o.SetGithubRepo(githubRepo)
	return o
}

// SetGithubRepo adds the githubRepo to the upsert pr workspace params
func (o *UpsertPrWorkspaceParams) SetGithubRepo(githubRepo string) {
	o.GithubRepo = githubRepo
}

// WithPrNumber adds the prNumber to the upsert pr workspace params
func (o *UpsertPrWorkspaceParams) WithPrNumber(prNumber int64) *UpsertPrWorkspaceParams {
	o.SetPrNumber(prNumber)
	return o
}

// SetPrNumber adds the prNumber to the upsert pr workspace params
func (o *UpsertPrWorkspaceParams) SetPrNumber(prNumber int64) {
	o.PrNumber = prNumber
}

// WriteToRequest writes these params to a swagger request
func (o *UpsertPrWorkspaceParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error
	if o.Data != nil {
		if err := r.SetBodyParam(o.Data); err != nil {
			return err
		}
	}

	// path param githubOrg
	if err := r.SetPathParam("githubOrg", o.GithubOrg); err != nil {
		return err
	}

	// path param githubRepo
	if err := r.SetPathParam("githubRepo", o.GithubRepo); err != nil {
		return err
	}

	// path param prNumber
	if err := r.SetPathParam("prNumber", swag.FormatInt64(o.PrNumber)); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
