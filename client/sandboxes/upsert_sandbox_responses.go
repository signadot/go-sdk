// Code generated by go-swagger; DO NOT EDIT.

package sandboxes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/signadot/go-sdk/models"
)

// UpsertSandboxReader is a Reader for the UpsertSandbox structure.
type UpsertSandboxReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpsertSandboxReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpsertSandboxOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpsertSandboxBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpsertSandboxUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 502:
		result := NewUpsertSandboxBadGateway()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpsertSandboxOK creates a UpsertSandboxOK with default headers values
func NewUpsertSandboxOK() *UpsertSandboxOK {
	return &UpsertSandboxOK{}
}

/* UpsertSandboxOK describes a response with status code 200, with default header values.

OK
*/
type UpsertSandboxOK struct {
	Payload *models.SandboxByNamePutResult
}

func (o *UpsertSandboxOK) Error() string {
	return fmt.Sprintf("[PUT /orgs/{orgName}/sandboxes/{sandboxName}][%d] upsertSandboxOK  %+v", 200, o.Payload)
}
func (o *UpsertSandboxOK) GetPayload() *models.SandboxByNamePutResult {
	return o.Payload
}

func (o *UpsertSandboxOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SandboxByNamePutResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpsertSandboxBadRequest creates a UpsertSandboxBadRequest with default headers values
func NewUpsertSandboxBadRequest() *UpsertSandboxBadRequest {
	return &UpsertSandboxBadRequest{}
}

/* UpsertSandboxBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type UpsertSandboxBadRequest struct {
	Payload *models.ApierrsResponse
}

func (o *UpsertSandboxBadRequest) Error() string {
	return fmt.Sprintf("[PUT /orgs/{orgName}/sandboxes/{sandboxName}][%d] upsertSandboxBadRequest  %+v", 400, o.Payload)
}
func (o *UpsertSandboxBadRequest) GetPayload() *models.ApierrsResponse {
	return o.Payload
}

func (o *UpsertSandboxBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ApierrsResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpsertSandboxUnauthorized creates a UpsertSandboxUnauthorized with default headers values
func NewUpsertSandboxUnauthorized() *UpsertSandboxUnauthorized {
	return &UpsertSandboxUnauthorized{}
}

/* UpsertSandboxUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type UpsertSandboxUnauthorized struct {
	Payload *models.ApierrsResponse
}

func (o *UpsertSandboxUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /orgs/{orgName}/sandboxes/{sandboxName}][%d] upsertSandboxUnauthorized  %+v", 401, o.Payload)
}
func (o *UpsertSandboxUnauthorized) GetPayload() *models.ApierrsResponse {
	return o.Payload
}

func (o *UpsertSandboxUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ApierrsResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpsertSandboxBadGateway creates a UpsertSandboxBadGateway with default headers values
func NewUpsertSandboxBadGateway() *UpsertSandboxBadGateway {
	return &UpsertSandboxBadGateway{}
}

/* UpsertSandboxBadGateway describes a response with status code 502, with default header values.

Bad Gateway
*/
type UpsertSandboxBadGateway struct {
	Payload *models.ApierrsResponse
}

func (o *UpsertSandboxBadGateway) Error() string {
	return fmt.Sprintf("[PUT /orgs/{orgName}/sandboxes/{sandboxName}][%d] upsertSandboxBadGateway  %+v", 502, o.Payload)
}
func (o *UpsertSandboxBadGateway) GetPayload() *models.ApierrsResponse {
	return o.Payload
}

func (o *UpsertSandboxBadGateway) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ApierrsResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
