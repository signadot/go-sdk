// Code generated by go-swagger; DO NOT EDIT.

package sandboxes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/signadot/go-sdk/models"
)

// GetSandboxReader is a Reader for the GetSandbox structure.
type GetSandboxReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSandboxReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetSandboxOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetSandboxBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetSandboxUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 502:
		result := NewGetSandboxBadGateway()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetSandboxOK creates a GetSandboxOK with default headers values
func NewGetSandboxOK() *GetSandboxOK {
	return &GetSandboxOK{}
}

/* GetSandboxOK describes a response with status code 200, with default header values.

OK
*/
type GetSandboxOK struct {
	Payload *models.SandboxByNameGetResult
}

func (o *GetSandboxOK) Error() string {
	return fmt.Sprintf("[GET /orgs/{orgName}/sandboxes/{sandboxName}][%d] getSandboxOK  %+v", 200, o.Payload)
}
func (o *GetSandboxOK) GetPayload() *models.SandboxByNameGetResult {
	return o.Payload
}

func (o *GetSandboxOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SandboxByNameGetResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSandboxBadRequest creates a GetSandboxBadRequest with default headers values
func NewGetSandboxBadRequest() *GetSandboxBadRequest {
	return &GetSandboxBadRequest{}
}

/* GetSandboxBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetSandboxBadRequest struct {
	Payload *models.ErrorResponse
}

func (o *GetSandboxBadRequest) Error() string {
	return fmt.Sprintf("[GET /orgs/{orgName}/sandboxes/{sandboxName}][%d] getSandboxBadRequest  %+v", 400, o.Payload)
}
func (o *GetSandboxBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetSandboxBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSandboxUnauthorized creates a GetSandboxUnauthorized with default headers values
func NewGetSandboxUnauthorized() *GetSandboxUnauthorized {
	return &GetSandboxUnauthorized{}
}

/* GetSandboxUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetSandboxUnauthorized struct {
	Payload *models.ErrorResponse
}

func (o *GetSandboxUnauthorized) Error() string {
	return fmt.Sprintf("[GET /orgs/{orgName}/sandboxes/{sandboxName}][%d] getSandboxUnauthorized  %+v", 401, o.Payload)
}
func (o *GetSandboxUnauthorized) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetSandboxUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSandboxBadGateway creates a GetSandboxBadGateway with default headers values
func NewGetSandboxBadGateway() *GetSandboxBadGateway {
	return &GetSandboxBadGateway{}
}

/* GetSandboxBadGateway describes a response with status code 502, with default header values.

Bad Gateway
*/
type GetSandboxBadGateway struct {
	Payload *models.ErrorResponse
}

func (o *GetSandboxBadGateway) Error() string {
	return fmt.Sprintf("[GET /orgs/{orgName}/sandboxes/{sandboxName}][%d] getSandboxBadGateway  %+v", 502, o.Payload)
}
func (o *GetSandboxBadGateway) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetSandboxBadGateway) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
