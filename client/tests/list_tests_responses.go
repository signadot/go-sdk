// Code generated by go-swagger; DO NOT EDIT.

package tests

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/signadot/go-sdk/models"
)

// ListTestsReader is a Reader for the ListTests structure.
type ListTestsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListTestsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListTestsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewListTestsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewListTestsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 502:
		result := NewListTestsBadGateway()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /orgs/{orgName}/tests] list-tests", response, response.Code())
	}
}

// NewListTestsOK creates a ListTestsOK with default headers values
func NewListTestsOK() *ListTestsOK {
	return &ListTestsOK{}
}

/*
ListTestsOK describes a response with status code 200, with default header values.

OK
*/
type ListTestsOK struct {
	Payload []*models.Test
}

// IsSuccess returns true when this list tests o k response has a 2xx status code
func (o *ListTestsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list tests o k response has a 3xx status code
func (o *ListTestsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list tests o k response has a 4xx status code
func (o *ListTestsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list tests o k response has a 5xx status code
func (o *ListTestsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list tests o k response a status code equal to that given
func (o *ListTestsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the list tests o k response
func (o *ListTestsOK) Code() int {
	return 200
}

func (o *ListTestsOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /orgs/{orgName}/tests][%d] listTestsOK %s", 200, payload)
}

func (o *ListTestsOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /orgs/{orgName}/tests][%d] listTestsOK %s", 200, payload)
}

func (o *ListTestsOK) GetPayload() []*models.Test {
	return o.Payload
}

func (o *ListTestsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListTestsBadRequest creates a ListTestsBadRequest with default headers values
func NewListTestsBadRequest() *ListTestsBadRequest {
	return &ListTestsBadRequest{}
}

/*
ListTestsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type ListTestsBadRequest struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this list tests bad request response has a 2xx status code
func (o *ListTestsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list tests bad request response has a 3xx status code
func (o *ListTestsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list tests bad request response has a 4xx status code
func (o *ListTestsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this list tests bad request response has a 5xx status code
func (o *ListTestsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this list tests bad request response a status code equal to that given
func (o *ListTestsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the list tests bad request response
func (o *ListTestsBadRequest) Code() int {
	return 400
}

func (o *ListTestsBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /orgs/{orgName}/tests][%d] listTestsBadRequest %s", 400, payload)
}

func (o *ListTestsBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /orgs/{orgName}/tests][%d] listTestsBadRequest %s", 400, payload)
}

func (o *ListTestsBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *ListTestsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListTestsUnauthorized creates a ListTestsUnauthorized with default headers values
func NewListTestsUnauthorized() *ListTestsUnauthorized {
	return &ListTestsUnauthorized{}
}

/*
ListTestsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type ListTestsUnauthorized struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this list tests unauthorized response has a 2xx status code
func (o *ListTestsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list tests unauthorized response has a 3xx status code
func (o *ListTestsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list tests unauthorized response has a 4xx status code
func (o *ListTestsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this list tests unauthorized response has a 5xx status code
func (o *ListTestsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this list tests unauthorized response a status code equal to that given
func (o *ListTestsUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the list tests unauthorized response
func (o *ListTestsUnauthorized) Code() int {
	return 401
}

func (o *ListTestsUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /orgs/{orgName}/tests][%d] listTestsUnauthorized %s", 401, payload)
}

func (o *ListTestsUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /orgs/{orgName}/tests][%d] listTestsUnauthorized %s", 401, payload)
}

func (o *ListTestsUnauthorized) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *ListTestsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListTestsBadGateway creates a ListTestsBadGateway with default headers values
func NewListTestsBadGateway() *ListTestsBadGateway {
	return &ListTestsBadGateway{}
}

/*
ListTestsBadGateway describes a response with status code 502, with default header values.

Bad Gateway
*/
type ListTestsBadGateway struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this list tests bad gateway response has a 2xx status code
func (o *ListTestsBadGateway) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list tests bad gateway response has a 3xx status code
func (o *ListTestsBadGateway) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list tests bad gateway response has a 4xx status code
func (o *ListTestsBadGateway) IsClientError() bool {
	return false
}

// IsServerError returns true when this list tests bad gateway response has a 5xx status code
func (o *ListTestsBadGateway) IsServerError() bool {
	return true
}

// IsCode returns true when this list tests bad gateway response a status code equal to that given
func (o *ListTestsBadGateway) IsCode(code int) bool {
	return code == 502
}

// Code gets the status code for the list tests bad gateway response
func (o *ListTestsBadGateway) Code() int {
	return 502
}

func (o *ListTestsBadGateway) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /orgs/{orgName}/tests][%d] listTestsBadGateway %s", 502, payload)
}

func (o *ListTestsBadGateway) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /orgs/{orgName}/tests][%d] listTestsBadGateway %s", 502, payload)
}

func (o *ListTestsBadGateway) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *ListTestsBadGateway) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
