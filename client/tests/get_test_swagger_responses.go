// Code generated by go-swagger; DO NOT EDIT.

package tests

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/signadot/go-sdk/models"
)

// GetTestReader is a Reader for the GetTest structure.
type GetTestReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetTestReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetTestOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetTestBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetTestUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 502:
		result := NewGetTestBadGateway()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /orgs/{orgName}/tests/{testName}] get-test", response, response.Code())
	}
}

// NewGetTestOK creates a GetTestOK with default headers values
func NewGetTestOK() *GetTestOK {
	return &GetTestOK{}
}

/*
GetTestOK describes a response with status code 200, with default header values.

OK
*/
type GetTestOK struct {
	Payload *models.Test
}

// IsSuccess returns true when this get test o k response has a 2xx status code
func (o *GetTestOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get test o k response has a 3xx status code
func (o *GetTestOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get test o k response has a 4xx status code
func (o *GetTestOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get test o k response has a 5xx status code
func (o *GetTestOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get test o k response a status code equal to that given
func (o *GetTestOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get test o k response
func (o *GetTestOK) Code() int {
	return 200
}

func (o *GetTestOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /orgs/{orgName}/tests/{testName}][%d] getTestOK %s", 200, payload)
}

func (o *GetTestOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /orgs/{orgName}/tests/{testName}][%d] getTestOK %s", 200, payload)
}

func (o *GetTestOK) GetPayload() *models.Test {
	return o.Payload
}

func (o *GetTestOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Test)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTestBadRequest creates a GetTestBadRequest with default headers values
func NewGetTestBadRequest() *GetTestBadRequest {
	return &GetTestBadRequest{}
}

/*
GetTestBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetTestBadRequest struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get test bad request response has a 2xx status code
func (o *GetTestBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get test bad request response has a 3xx status code
func (o *GetTestBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get test bad request response has a 4xx status code
func (o *GetTestBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get test bad request response has a 5xx status code
func (o *GetTestBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get test bad request response a status code equal to that given
func (o *GetTestBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get test bad request response
func (o *GetTestBadRequest) Code() int {
	return 400
}

func (o *GetTestBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /orgs/{orgName}/tests/{testName}][%d] getTestBadRequest %s", 400, payload)
}

func (o *GetTestBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /orgs/{orgName}/tests/{testName}][%d] getTestBadRequest %s", 400, payload)
}

func (o *GetTestBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetTestBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTestUnauthorized creates a GetTestUnauthorized with default headers values
func NewGetTestUnauthorized() *GetTestUnauthorized {
	return &GetTestUnauthorized{}
}

/*
GetTestUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetTestUnauthorized struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get test unauthorized response has a 2xx status code
func (o *GetTestUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get test unauthorized response has a 3xx status code
func (o *GetTestUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get test unauthorized response has a 4xx status code
func (o *GetTestUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get test unauthorized response has a 5xx status code
func (o *GetTestUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get test unauthorized response a status code equal to that given
func (o *GetTestUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get test unauthorized response
func (o *GetTestUnauthorized) Code() int {
	return 401
}

func (o *GetTestUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /orgs/{orgName}/tests/{testName}][%d] getTestUnauthorized %s", 401, payload)
}

func (o *GetTestUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /orgs/{orgName}/tests/{testName}][%d] getTestUnauthorized %s", 401, payload)
}

func (o *GetTestUnauthorized) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetTestUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTestBadGateway creates a GetTestBadGateway with default headers values
func NewGetTestBadGateway() *GetTestBadGateway {
	return &GetTestBadGateway{}
}

/*
GetTestBadGateway describes a response with status code 502, with default header values.

Bad Gateway
*/
type GetTestBadGateway struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get test bad gateway response has a 2xx status code
func (o *GetTestBadGateway) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get test bad gateway response has a 3xx status code
func (o *GetTestBadGateway) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get test bad gateway response has a 4xx status code
func (o *GetTestBadGateway) IsClientError() bool {
	return false
}

// IsServerError returns true when this get test bad gateway response has a 5xx status code
func (o *GetTestBadGateway) IsServerError() bool {
	return true
}

// IsCode returns true when this get test bad gateway response a status code equal to that given
func (o *GetTestBadGateway) IsCode(code int) bool {
	return code == 502
}

// Code gets the status code for the get test bad gateway response
func (o *GetTestBadGateway) Code() int {
	return 502
}

func (o *GetTestBadGateway) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /orgs/{orgName}/tests/{testName}][%d] getTestBadGateway %s", 502, payload)
}

func (o *GetTestBadGateway) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /orgs/{orgName}/tests/{testName}][%d] getTestBadGateway %s", 502, payload)
}

func (o *GetTestBadGateway) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetTestBadGateway) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
