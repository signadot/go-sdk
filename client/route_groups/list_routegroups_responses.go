// Code generated by go-swagger; DO NOT EDIT.

package route_groups

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/signadot/go-sdk/models"
)

// ListRoutegroupsReader is a Reader for the ListRoutegroups structure.
type ListRoutegroupsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListRoutegroupsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListRoutegroupsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewListRoutegroupsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewListRoutegroupsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 502:
		result := NewListRoutegroupsBadGateway()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /orgs/{orgName}/routegroups] list-routegroups", response, response.Code())
	}
}

// NewListRoutegroupsOK creates a ListRoutegroupsOK with default headers values
func NewListRoutegroupsOK() *ListRoutegroupsOK {
	return &ListRoutegroupsOK{}
}

/*
ListRoutegroupsOK describes a response with status code 200, with default header values.

OK
*/
type ListRoutegroupsOK struct {
	Payload []*models.RouteGroup
}

// IsSuccess returns true when this list routegroups o k response has a 2xx status code
func (o *ListRoutegroupsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list routegroups o k response has a 3xx status code
func (o *ListRoutegroupsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list routegroups o k response has a 4xx status code
func (o *ListRoutegroupsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list routegroups o k response has a 5xx status code
func (o *ListRoutegroupsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list routegroups o k response a status code equal to that given
func (o *ListRoutegroupsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the list routegroups o k response
func (o *ListRoutegroupsOK) Code() int {
	return 200
}

func (o *ListRoutegroupsOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /orgs/{orgName}/routegroups][%d] listRoutegroupsOK %s", 200, payload)
}

func (o *ListRoutegroupsOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /orgs/{orgName}/routegroups][%d] listRoutegroupsOK %s", 200, payload)
}

func (o *ListRoutegroupsOK) GetPayload() []*models.RouteGroup {
	return o.Payload
}

func (o *ListRoutegroupsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListRoutegroupsBadRequest creates a ListRoutegroupsBadRequest with default headers values
func NewListRoutegroupsBadRequest() *ListRoutegroupsBadRequest {
	return &ListRoutegroupsBadRequest{}
}

/*
ListRoutegroupsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type ListRoutegroupsBadRequest struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this list routegroups bad request response has a 2xx status code
func (o *ListRoutegroupsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list routegroups bad request response has a 3xx status code
func (o *ListRoutegroupsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list routegroups bad request response has a 4xx status code
func (o *ListRoutegroupsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this list routegroups bad request response has a 5xx status code
func (o *ListRoutegroupsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this list routegroups bad request response a status code equal to that given
func (o *ListRoutegroupsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the list routegroups bad request response
func (o *ListRoutegroupsBadRequest) Code() int {
	return 400
}

func (o *ListRoutegroupsBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /orgs/{orgName}/routegroups][%d] listRoutegroupsBadRequest %s", 400, payload)
}

func (o *ListRoutegroupsBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /orgs/{orgName}/routegroups][%d] listRoutegroupsBadRequest %s", 400, payload)
}

func (o *ListRoutegroupsBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *ListRoutegroupsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListRoutegroupsUnauthorized creates a ListRoutegroupsUnauthorized with default headers values
func NewListRoutegroupsUnauthorized() *ListRoutegroupsUnauthorized {
	return &ListRoutegroupsUnauthorized{}
}

/*
ListRoutegroupsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type ListRoutegroupsUnauthorized struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this list routegroups unauthorized response has a 2xx status code
func (o *ListRoutegroupsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list routegroups unauthorized response has a 3xx status code
func (o *ListRoutegroupsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list routegroups unauthorized response has a 4xx status code
func (o *ListRoutegroupsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this list routegroups unauthorized response has a 5xx status code
func (o *ListRoutegroupsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this list routegroups unauthorized response a status code equal to that given
func (o *ListRoutegroupsUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the list routegroups unauthorized response
func (o *ListRoutegroupsUnauthorized) Code() int {
	return 401
}

func (o *ListRoutegroupsUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /orgs/{orgName}/routegroups][%d] listRoutegroupsUnauthorized %s", 401, payload)
}

func (o *ListRoutegroupsUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /orgs/{orgName}/routegroups][%d] listRoutegroupsUnauthorized %s", 401, payload)
}

func (o *ListRoutegroupsUnauthorized) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *ListRoutegroupsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListRoutegroupsBadGateway creates a ListRoutegroupsBadGateway with default headers values
func NewListRoutegroupsBadGateway() *ListRoutegroupsBadGateway {
	return &ListRoutegroupsBadGateway{}
}

/*
ListRoutegroupsBadGateway describes a response with status code 502, with default header values.

Bad Gateway
*/
type ListRoutegroupsBadGateway struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this list routegroups bad gateway response has a 2xx status code
func (o *ListRoutegroupsBadGateway) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list routegroups bad gateway response has a 3xx status code
func (o *ListRoutegroupsBadGateway) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list routegroups bad gateway response has a 4xx status code
func (o *ListRoutegroupsBadGateway) IsClientError() bool {
	return false
}

// IsServerError returns true when this list routegroups bad gateway response has a 5xx status code
func (o *ListRoutegroupsBadGateway) IsServerError() bool {
	return true
}

// IsCode returns true when this list routegroups bad gateway response a status code equal to that given
func (o *ListRoutegroupsBadGateway) IsCode(code int) bool {
	return code == 502
}

// Code gets the status code for the list routegroups bad gateway response
func (o *ListRoutegroupsBadGateway) Code() int {
	return 502
}

func (o *ListRoutegroupsBadGateway) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /orgs/{orgName}/routegroups][%d] listRoutegroupsBadGateway %s", 502, payload)
}

func (o *ListRoutegroupsBadGateway) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /orgs/{orgName}/routegroups][%d] listRoutegroupsBadGateway %s", 502, payload)
}

func (o *ListRoutegroupsBadGateway) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *ListRoutegroupsBadGateway) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
