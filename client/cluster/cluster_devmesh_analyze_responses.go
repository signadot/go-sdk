// Code generated by go-swagger; DO NOT EDIT.

package cluster

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/signadot/go-sdk/models"
)

// ClusterDevmeshAnalyzeReader is a Reader for the ClusterDevmeshAnalyze structure.
type ClusterDevmeshAnalyzeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ClusterDevmeshAnalyzeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewClusterDevmeshAnalyzeOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewClusterDevmeshAnalyzeBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewClusterDevmeshAnalyzeUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewClusterDevmeshAnalyzeInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 502:
		result := NewClusterDevmeshAnalyzeBadGateway()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /orgs/{orgName}/clusters/{clusterName}/devmesh/analyze] cluster-devmesh-analyze", response, response.Code())
	}
}

// NewClusterDevmeshAnalyzeOK creates a ClusterDevmeshAnalyzeOK with default headers values
func NewClusterDevmeshAnalyzeOK() *ClusterDevmeshAnalyzeOK {
	return &ClusterDevmeshAnalyzeOK{}
}

/*
ClusterDevmeshAnalyzeOK describes a response with status code 200, with default header values.

OK
*/
type ClusterDevmeshAnalyzeOK struct {
	Payload []*models.ClustersDevMeshEnabledWorkload
}

// IsSuccess returns true when this cluster devmesh analyze o k response has a 2xx status code
func (o *ClusterDevmeshAnalyzeOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this cluster devmesh analyze o k response has a 3xx status code
func (o *ClusterDevmeshAnalyzeOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cluster devmesh analyze o k response has a 4xx status code
func (o *ClusterDevmeshAnalyzeOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this cluster devmesh analyze o k response has a 5xx status code
func (o *ClusterDevmeshAnalyzeOK) IsServerError() bool {
	return false
}

// IsCode returns true when this cluster devmesh analyze o k response a status code equal to that given
func (o *ClusterDevmeshAnalyzeOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the cluster devmesh analyze o k response
func (o *ClusterDevmeshAnalyzeOK) Code() int {
	return 200
}

func (o *ClusterDevmeshAnalyzeOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /orgs/{orgName}/clusters/{clusterName}/devmesh/analyze][%d] clusterDevmeshAnalyzeOK %s", 200, payload)
}

func (o *ClusterDevmeshAnalyzeOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /orgs/{orgName}/clusters/{clusterName}/devmesh/analyze][%d] clusterDevmeshAnalyzeOK %s", 200, payload)
}

func (o *ClusterDevmeshAnalyzeOK) GetPayload() []*models.ClustersDevMeshEnabledWorkload {
	return o.Payload
}

func (o *ClusterDevmeshAnalyzeOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewClusterDevmeshAnalyzeBadRequest creates a ClusterDevmeshAnalyzeBadRequest with default headers values
func NewClusterDevmeshAnalyzeBadRequest() *ClusterDevmeshAnalyzeBadRequest {
	return &ClusterDevmeshAnalyzeBadRequest{}
}

/*
ClusterDevmeshAnalyzeBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type ClusterDevmeshAnalyzeBadRequest struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this cluster devmesh analyze bad request response has a 2xx status code
func (o *ClusterDevmeshAnalyzeBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this cluster devmesh analyze bad request response has a 3xx status code
func (o *ClusterDevmeshAnalyzeBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cluster devmesh analyze bad request response has a 4xx status code
func (o *ClusterDevmeshAnalyzeBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this cluster devmesh analyze bad request response has a 5xx status code
func (o *ClusterDevmeshAnalyzeBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this cluster devmesh analyze bad request response a status code equal to that given
func (o *ClusterDevmeshAnalyzeBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the cluster devmesh analyze bad request response
func (o *ClusterDevmeshAnalyzeBadRequest) Code() int {
	return 400
}

func (o *ClusterDevmeshAnalyzeBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /orgs/{orgName}/clusters/{clusterName}/devmesh/analyze][%d] clusterDevmeshAnalyzeBadRequest %s", 400, payload)
}

func (o *ClusterDevmeshAnalyzeBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /orgs/{orgName}/clusters/{clusterName}/devmesh/analyze][%d] clusterDevmeshAnalyzeBadRequest %s", 400, payload)
}

func (o *ClusterDevmeshAnalyzeBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *ClusterDevmeshAnalyzeBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewClusterDevmeshAnalyzeUnauthorized creates a ClusterDevmeshAnalyzeUnauthorized with default headers values
func NewClusterDevmeshAnalyzeUnauthorized() *ClusterDevmeshAnalyzeUnauthorized {
	return &ClusterDevmeshAnalyzeUnauthorized{}
}

/*
ClusterDevmeshAnalyzeUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type ClusterDevmeshAnalyzeUnauthorized struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this cluster devmesh analyze unauthorized response has a 2xx status code
func (o *ClusterDevmeshAnalyzeUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this cluster devmesh analyze unauthorized response has a 3xx status code
func (o *ClusterDevmeshAnalyzeUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cluster devmesh analyze unauthorized response has a 4xx status code
func (o *ClusterDevmeshAnalyzeUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this cluster devmesh analyze unauthorized response has a 5xx status code
func (o *ClusterDevmeshAnalyzeUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this cluster devmesh analyze unauthorized response a status code equal to that given
func (o *ClusterDevmeshAnalyzeUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the cluster devmesh analyze unauthorized response
func (o *ClusterDevmeshAnalyzeUnauthorized) Code() int {
	return 401
}

func (o *ClusterDevmeshAnalyzeUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /orgs/{orgName}/clusters/{clusterName}/devmesh/analyze][%d] clusterDevmeshAnalyzeUnauthorized %s", 401, payload)
}

func (o *ClusterDevmeshAnalyzeUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /orgs/{orgName}/clusters/{clusterName}/devmesh/analyze][%d] clusterDevmeshAnalyzeUnauthorized %s", 401, payload)
}

func (o *ClusterDevmeshAnalyzeUnauthorized) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *ClusterDevmeshAnalyzeUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewClusterDevmeshAnalyzeInternalServerError creates a ClusterDevmeshAnalyzeInternalServerError with default headers values
func NewClusterDevmeshAnalyzeInternalServerError() *ClusterDevmeshAnalyzeInternalServerError {
	return &ClusterDevmeshAnalyzeInternalServerError{}
}

/*
ClusterDevmeshAnalyzeInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type ClusterDevmeshAnalyzeInternalServerError struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this cluster devmesh analyze internal server error response has a 2xx status code
func (o *ClusterDevmeshAnalyzeInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this cluster devmesh analyze internal server error response has a 3xx status code
func (o *ClusterDevmeshAnalyzeInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cluster devmesh analyze internal server error response has a 4xx status code
func (o *ClusterDevmeshAnalyzeInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this cluster devmesh analyze internal server error response has a 5xx status code
func (o *ClusterDevmeshAnalyzeInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this cluster devmesh analyze internal server error response a status code equal to that given
func (o *ClusterDevmeshAnalyzeInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the cluster devmesh analyze internal server error response
func (o *ClusterDevmeshAnalyzeInternalServerError) Code() int {
	return 500
}

func (o *ClusterDevmeshAnalyzeInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /orgs/{orgName}/clusters/{clusterName}/devmesh/analyze][%d] clusterDevmeshAnalyzeInternalServerError %s", 500, payload)
}

func (o *ClusterDevmeshAnalyzeInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /orgs/{orgName}/clusters/{clusterName}/devmesh/analyze][%d] clusterDevmeshAnalyzeInternalServerError %s", 500, payload)
}

func (o *ClusterDevmeshAnalyzeInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *ClusterDevmeshAnalyzeInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewClusterDevmeshAnalyzeBadGateway creates a ClusterDevmeshAnalyzeBadGateway with default headers values
func NewClusterDevmeshAnalyzeBadGateway() *ClusterDevmeshAnalyzeBadGateway {
	return &ClusterDevmeshAnalyzeBadGateway{}
}

/*
ClusterDevmeshAnalyzeBadGateway describes a response with status code 502, with default header values.

Bad Gateway
*/
type ClusterDevmeshAnalyzeBadGateway struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this cluster devmesh analyze bad gateway response has a 2xx status code
func (o *ClusterDevmeshAnalyzeBadGateway) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this cluster devmesh analyze bad gateway response has a 3xx status code
func (o *ClusterDevmeshAnalyzeBadGateway) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cluster devmesh analyze bad gateway response has a 4xx status code
func (o *ClusterDevmeshAnalyzeBadGateway) IsClientError() bool {
	return false
}

// IsServerError returns true when this cluster devmesh analyze bad gateway response has a 5xx status code
func (o *ClusterDevmeshAnalyzeBadGateway) IsServerError() bool {
	return true
}

// IsCode returns true when this cluster devmesh analyze bad gateway response a status code equal to that given
func (o *ClusterDevmeshAnalyzeBadGateway) IsCode(code int) bool {
	return code == 502
}

// Code gets the status code for the cluster devmesh analyze bad gateway response
func (o *ClusterDevmeshAnalyzeBadGateway) Code() int {
	return 502
}

func (o *ClusterDevmeshAnalyzeBadGateway) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /orgs/{orgName}/clusters/{clusterName}/devmesh/analyze][%d] clusterDevmeshAnalyzeBadGateway %s", 502, payload)
}

func (o *ClusterDevmeshAnalyzeBadGateway) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /orgs/{orgName}/clusters/{clusterName}/devmesh/analyze][%d] clusterDevmeshAnalyzeBadGateway %s", 502, payload)
}

func (o *ClusterDevmeshAnalyzeBadGateway) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *ClusterDevmeshAnalyzeBadGateway) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
