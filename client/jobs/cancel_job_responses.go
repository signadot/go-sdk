// Code generated by go-swagger; DO NOT EDIT.

package jobs

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/signadot/go-sdk/models"
)

// CancelJobReader is a Reader for the CancelJob structure.
type CancelJobReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CancelJobReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCancelJobOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCancelJobBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCancelJobUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 502:
		result := NewCancelJobBadGateway()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /orgs/{orgName}/jobs/{jobName}/cancel] cancel-job", response, response.Code())
	}
}

// NewCancelJobOK creates a CancelJobOK with default headers values
func NewCancelJobOK() *CancelJobOK {
	return &CancelJobOK{}
}

/*
CancelJobOK describes a response with status code 200, with default header values.

OK
*/
type CancelJobOK struct {
	Payload *models.Job
}

// IsSuccess returns true when this cancel job o k response has a 2xx status code
func (o *CancelJobOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this cancel job o k response has a 3xx status code
func (o *CancelJobOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cancel job o k response has a 4xx status code
func (o *CancelJobOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this cancel job o k response has a 5xx status code
func (o *CancelJobOK) IsServerError() bool {
	return false
}

// IsCode returns true when this cancel job o k response a status code equal to that given
func (o *CancelJobOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the cancel job o k response
func (o *CancelJobOK) Code() int {
	return 200
}

func (o *CancelJobOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /orgs/{orgName}/jobs/{jobName}/cancel][%d] cancelJobOK %s", 200, payload)
}

func (o *CancelJobOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /orgs/{orgName}/jobs/{jobName}/cancel][%d] cancelJobOK %s", 200, payload)
}

func (o *CancelJobOK) GetPayload() *models.Job {
	return o.Payload
}

func (o *CancelJobOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Job)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCancelJobBadRequest creates a CancelJobBadRequest with default headers values
func NewCancelJobBadRequest() *CancelJobBadRequest {
	return &CancelJobBadRequest{}
}

/*
CancelJobBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type CancelJobBadRequest struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this cancel job bad request response has a 2xx status code
func (o *CancelJobBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this cancel job bad request response has a 3xx status code
func (o *CancelJobBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cancel job bad request response has a 4xx status code
func (o *CancelJobBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this cancel job bad request response has a 5xx status code
func (o *CancelJobBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this cancel job bad request response a status code equal to that given
func (o *CancelJobBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the cancel job bad request response
func (o *CancelJobBadRequest) Code() int {
	return 400
}

func (o *CancelJobBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /orgs/{orgName}/jobs/{jobName}/cancel][%d] cancelJobBadRequest %s", 400, payload)
}

func (o *CancelJobBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /orgs/{orgName}/jobs/{jobName}/cancel][%d] cancelJobBadRequest %s", 400, payload)
}

func (o *CancelJobBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *CancelJobBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCancelJobUnauthorized creates a CancelJobUnauthorized with default headers values
func NewCancelJobUnauthorized() *CancelJobUnauthorized {
	return &CancelJobUnauthorized{}
}

/*
CancelJobUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type CancelJobUnauthorized struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this cancel job unauthorized response has a 2xx status code
func (o *CancelJobUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this cancel job unauthorized response has a 3xx status code
func (o *CancelJobUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cancel job unauthorized response has a 4xx status code
func (o *CancelJobUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this cancel job unauthorized response has a 5xx status code
func (o *CancelJobUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this cancel job unauthorized response a status code equal to that given
func (o *CancelJobUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the cancel job unauthorized response
func (o *CancelJobUnauthorized) Code() int {
	return 401
}

func (o *CancelJobUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /orgs/{orgName}/jobs/{jobName}/cancel][%d] cancelJobUnauthorized %s", 401, payload)
}

func (o *CancelJobUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /orgs/{orgName}/jobs/{jobName}/cancel][%d] cancelJobUnauthorized %s", 401, payload)
}

func (o *CancelJobUnauthorized) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *CancelJobUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCancelJobBadGateway creates a CancelJobBadGateway with default headers values
func NewCancelJobBadGateway() *CancelJobBadGateway {
	return &CancelJobBadGateway{}
}

/*
CancelJobBadGateway describes a response with status code 502, with default header values.

Bad Gateway
*/
type CancelJobBadGateway struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this cancel job bad gateway response has a 2xx status code
func (o *CancelJobBadGateway) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this cancel job bad gateway response has a 3xx status code
func (o *CancelJobBadGateway) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cancel job bad gateway response has a 4xx status code
func (o *CancelJobBadGateway) IsClientError() bool {
	return false
}

// IsServerError returns true when this cancel job bad gateway response has a 5xx status code
func (o *CancelJobBadGateway) IsServerError() bool {
	return true
}

// IsCode returns true when this cancel job bad gateway response a status code equal to that given
func (o *CancelJobBadGateway) IsCode(code int) bool {
	return code == 502
}

// Code gets the status code for the cancel job bad gateway response
func (o *CancelJobBadGateway) Code() int {
	return 502
}

func (o *CancelJobBadGateway) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /orgs/{orgName}/jobs/{jobName}/cancel][%d] cancelJobBadGateway %s", 502, payload)
}

func (o *CancelJobBadGateway) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /orgs/{orgName}/jobs/{jobName}/cancel][%d] cancelJobBadGateway %s", 502, payload)
}

func (o *CancelJobBadGateway) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *CancelJobBadGateway) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
