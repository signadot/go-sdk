// Code generated by go-swagger; DO NOT EDIT.

package auth

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/signadot/go-sdk/models"
)

// AuthDeviceGetCodeReader is a Reader for the AuthDeviceGetCode structure.
type AuthDeviceGetCodeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AuthDeviceGetCodeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAuthDeviceGetCodeOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 500:
		result := NewAuthDeviceGetCodeInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /auth/device/code/] auth-device-get-code", response, response.Code())
	}
}

// NewAuthDeviceGetCodeOK creates a AuthDeviceGetCodeOK with default headers values
func NewAuthDeviceGetCodeOK() *AuthDeviceGetCodeOK {
	return &AuthDeviceGetCodeOK{}
}

/*
AuthDeviceGetCodeOK describes a response with status code 200, with default header values.

OK
*/
type AuthDeviceGetCodeOK struct {
	Payload *models.AuthdevicesCode
}

// IsSuccess returns true when this auth device get code o k response has a 2xx status code
func (o *AuthDeviceGetCodeOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this auth device get code o k response has a 3xx status code
func (o *AuthDeviceGetCodeOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this auth device get code o k response has a 4xx status code
func (o *AuthDeviceGetCodeOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this auth device get code o k response has a 5xx status code
func (o *AuthDeviceGetCodeOK) IsServerError() bool {
	return false
}

// IsCode returns true when this auth device get code o k response a status code equal to that given
func (o *AuthDeviceGetCodeOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the auth device get code o k response
func (o *AuthDeviceGetCodeOK) Code() int {
	return 200
}

func (o *AuthDeviceGetCodeOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /auth/device/code/][%d] authDeviceGetCodeOK %s", 200, payload)
}

func (o *AuthDeviceGetCodeOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /auth/device/code/][%d] authDeviceGetCodeOK %s", 200, payload)
}

func (o *AuthDeviceGetCodeOK) GetPayload() *models.AuthdevicesCode {
	return o.Payload
}

func (o *AuthDeviceGetCodeOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AuthdevicesCode)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAuthDeviceGetCodeInternalServerError creates a AuthDeviceGetCodeInternalServerError with default headers values
func NewAuthDeviceGetCodeInternalServerError() *AuthDeviceGetCodeInternalServerError {
	return &AuthDeviceGetCodeInternalServerError{}
}

/*
AuthDeviceGetCodeInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type AuthDeviceGetCodeInternalServerError struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this auth device get code internal server error response has a 2xx status code
func (o *AuthDeviceGetCodeInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this auth device get code internal server error response has a 3xx status code
func (o *AuthDeviceGetCodeInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this auth device get code internal server error response has a 4xx status code
func (o *AuthDeviceGetCodeInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this auth device get code internal server error response has a 5xx status code
func (o *AuthDeviceGetCodeInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this auth device get code internal server error response a status code equal to that given
func (o *AuthDeviceGetCodeInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the auth device get code internal server error response
func (o *AuthDeviceGetCodeInternalServerError) Code() int {
	return 500
}

func (o *AuthDeviceGetCodeInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /auth/device/code/][%d] authDeviceGetCodeInternalServerError %s", 500, payload)
}

func (o *AuthDeviceGetCodeInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /auth/device/code/][%d] authDeviceGetCodeInternalServerError %s", 500, payload)
}

func (o *AuthDeviceGetCodeInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *AuthDeviceGetCodeInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
